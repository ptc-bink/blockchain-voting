{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport { Grid, Step, Button, Checkbox, Form, Header, Icon, Image, Menu, Segment, Sidebar, TextArea, Container, Card } from 'semantic-ui-react';\nimport Layout from '../../components/Layout';\nimport web3 from '../../Ethereum/web3';\nimport Election from '../../Ethereum/election';\nimport Cookies from 'js-cookie';\nimport { Router } from '../../routes';\n\nvar VotingList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(VotingList, _Component);\n\n  function VotingList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, VotingList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(VotingList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      electiondet: '',\n      election_name: '',\n      election_desc: '',\n      numCand: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"GridExampleGrid\", function () {\n      return React.createElement(Grid, null, columns);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"SidebarExampleVisible\", function () {\n      return React.createElement(Sidebar.Pushable, null, React.createElement(Sidebar, {\n        as: Menu,\n        animation: \"overlay\",\n        icon: \"labeled\",\n        inverted: true,\n        vertical: true,\n        visible: true,\n        width: \"thin\",\n        style: {\n          backgroundColor: 'white',\n          borderWidth: \"10px\"\n        }\n      }, React.createElement(Menu.Item, {\n        as: \"a\",\n        style: {\n          color: 'grey'\n        }\n      }, React.createElement(\"h2\", null, \"MENU\"), React.createElement(\"hr\", null)), React.createElement(Menu.Item, {\n        as: \"a\",\n        style: {\n          color: 'grey'\n        }\n      }, React.createElement(Icon, {\n        name: \"dashboard\"\n      }), \"Dashboard\"), React.createElement(Menu.Item, {\n        as: \"a\",\n        style: {\n          color: 'grey'\n        }\n      }, React.createElement(Icon, {\n        name: \"user outline\"\n      }), \"Candidate List\"), React.createElement(Menu.Item, {\n        as: \"a\",\n        style: {\n          color: 'grey'\n        }\n      }, React.createElement(Icon, {\n        name: \"list\"\n      }), \"Voter List\"), React.createElement(Menu.Item, {\n        as: \"a\",\n        style: {\n          color: 'grey'\n        }\n      }, React.createElement(Icon, {\n        name: \"sign out\"\n      }), \"Sign Out\")));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      election_address: Cookies.get('address'),\n      election_name: '',\n      election_description: '',\n      candidates: [],\n      cand_name: '',\n      cand_desc: '',\n      buffer: '',\n      ipfsHash: null,\n      loading: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getElectionDetails\", function () {\n      var _this$state = _this.state,\n          election_name = _this$state.election_name,\n          election_description = _this$state.election_description;\n      return React.createElement(\"div\", {\n        style: {\n          marginLeft: '45%',\n          marginBottom: '2%',\n          marginTop: '2%'\n        }\n      }, React.createElement(Header, {\n        as: \"h2\"\n      }, React.createElement(Icon, {\n        name: \"address card\"\n      }), React.createElement(Header.Content, null, election_name, React.createElement(Header.Subheader, null, election_description))));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderTable\", function () {\n      return React.createElement(Card.Group, {\n        items: _this.state.item\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"vote\",\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log(event.currentTarget.id);\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    return _this;\n  }\n\n  _createClass(VotingList, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var _this2 = this;\n\n        var add, election, summary, c, candidates, _i, i, items;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                add = Cookies.get('address');\n                election = Election(add);\n                _context2.next = 5;\n                return election.methods.getElectionDetails().call();\n\n              case 5:\n                summary = _context2.sent;\n                this.setState({\n                  election_name: summary[0],\n                  election_description: summary[1]\n                });\n                _context2.next = 9;\n                return election.methods.getNumOfCandidates.call();\n\n              case 9:\n                c = _context2.sent;\n                console.log(\"NumCand: \" + c);\n                candidates = [];\n                _i = 0;\n\n              case 13:\n                if (!(_i < c)) {\n                  _context2.next = 22;\n                  break;\n                }\n\n                _context2.t0 = candidates;\n                _context2.next = 17;\n                return election.methods.getCandidate(_i).call();\n\n              case 17:\n                _context2.t1 = _context2.sent;\n\n                _context2.t0.push.call(_context2.t0, _context2.t1);\n\n              case 19:\n                _i++;\n                _context2.next = 13;\n                break;\n\n              case 22:\n                i = -1;\n                items = candidates.map(function (candidate) {\n                  i++;\n                  return {\n                    header: candidate[0],\n                    description: candidate[1],\n                    image: React.createElement(Image, {\n                      id: i,\n                      src: \"https://ipfs.io/ipfs/\".concat(candidate[2]),\n                      size: \"medium\"\n                    }),\n                    extra: React.createElement(\"div\", null, React.createElement(Icon, {\n                      name: \"pie graph\",\n                      size: \"small\",\n                      iconPostion: \"left\"\n                    }), candidate[3].toString(), React.createElement(Button, {\n                      id: i,\n                      style: {\n                        float: 'right'\n                      },\n                      onClick: _this2.vote,\n                      primary: true\n                    }, \"Vote!\"))\n                  };\n                });\n                this.setState({\n                  item: items\n                });\n                _context2.next = 32;\n                break;\n\n              case 27:\n                _context2.prev = 27;\n                _context2.t2 = _context2[\"catch\"](0);\n                console.log(_context2.t2.message);\n                alert(\"Redirecting you to login page...\");\n                Router.pushRoute('/company_login');\n\n              case 32:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 27]]);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", null, React.createElement(Grid, null, React.createElement(Grid.Row, null, React.createElement(Grid.Column, {\n        width: 2\n      }, this.SidebarExampleVisible()), React.createElement(Layout, null, this.getElectionDetails(), React.createElement(Grid.Column, {\n        style: {\n          minHeight: '77vh',\n          marginLeft: '10%'\n        }\n      }, React.createElement(Container, null, this.renderTable()))))));\n    }\n  }]);\n\n  return VotingList;\n}(Component);\n\nexport default VotingList;","map":{"version":3,"sources":["D:\\Blockchain\\BlockChainVoting\\pages\\election\\vote.js"],"names":["React","Component","Grid","Step","Button","Checkbox","Form","Header","Icon","Image","Menu","Segment","Sidebar","TextArea","Container","Card","Layout","web3","Election","Cookies","Router","VotingList","electiondet","election_name","election_desc","numCand","columns","backgroundColor","borderWidth","color","election_address","get","election_description","candidates","cand_name","cand_desc","buffer","ipfsHash","loading","state","marginLeft","marginBottom","marginTop","item","event","console","log","currentTarget","id","add","election","methods","getElectionDetails","call","summary","setState","getNumOfCandidates","c","i","getCandidate","push","items","map","candidate","header","description","image","extra","toString","float","vote","message","alert","pushRoute","SidebarExampleVisible","minHeight","renderTable"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Grid, Step, Button, Checkbox, Form, Header, Icon, Image, Menu, Segment, Sidebar,TextArea, Container, Card } from 'semantic-ui-react';\r\nimport Layout from '../../components/Layout'; \r\nimport web3 from '../../Ethereum/web3';\r\nimport Election from '../../Ethereum/election';\r\nimport Cookies from 'js-cookie';\r\nimport {Router} from '../../routes';\r\nclass VotingList extends Component {\r\n\r\n    state = {\r\n        electiondet: '',\r\n        election_name: '',\r\n        election_desc: '',\r\n        numCand: '',\r\n    };\r\n    GridExampleGrid = () => <Grid>{columns}</Grid>\r\n    SidebarExampleVisible = () => (\r\n  \r\n      <Sidebar.Pushable>\r\n        <Sidebar as={Menu} animation='overlay' icon='labeled' inverted vertical visible width='thin' style={{ backgroundColor: 'white', borderWidth: \"10px\" }}>\r\n        <Menu.Item as='a' style={{ color: 'grey' }} >\r\n        <h2>MENU</h2><hr/>\r\n        </Menu.Item>\r\n          <Menu.Item as='a' style={{ color: 'grey' }} >\r\n            <Icon name='dashboard' />\r\n            Dashboard\r\n          </Menu.Item>\r\n          <Menu.Item as='a' style={{ color: 'grey' }}>\r\n            <Icon name='user outline' />\r\n            Candidate List\r\n          </Menu.Item>\r\n          <Menu.Item as='a' style={{ color: 'grey' }}>\r\n            <Icon name='list' />\r\n            Voter List\r\n          </Menu.Item>\r\n          <Menu.Item as='a' style={{ color: 'grey' }}>\r\n            <Icon name='sign out' />\r\n            Sign Out\r\n          </Menu.Item>\r\n \r\n        </Sidebar>\r\n      </Sidebar.Pushable>\r\n    )\r\n    state = {\r\n        election_address: Cookies.get('address'),\r\n        election_name: '',\r\n        election_description: '',\r\n        candidates: [],\r\n        cand_name: '',\r\n        cand_desc: '',\r\n        buffer: '',\r\n        ipfsHash: null,\r\n        loading: false\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const add = Cookies.get('address');\r\n            const election = Election(add);\r\n            const summary = await election.methods.getElectionDetails().call();\r\n            this.setState({\r\n                election_name: summary[0],\r\n                election_description: summary[1]\r\n            });            \r\n            const c = await election.methods.getNumOfCandidates.call();\r\n            console.log(\"NumCand: \"+c);\r\n            \r\n            let candidates = [];\r\n            for(let i=0 ; i<c; i++) {\r\n                candidates.push(await election.methods.getCandidate(i).call());\r\n            }\r\n        let i=-1;\r\n        const items = candidates.map(candidate => {\r\n            i++;\r\n            return {\r\n              header: candidate[0],\r\n              description: candidate[1],\r\n              image: (\r\n                  <Image id={i} src={`https://ipfs.io/ipfs/${candidate[2]}`} size='medium'/>\r\n                ),\r\n              extra: (\r\n                  <div>\r\n                    <Icon name='pie graph' size='small' iconPostion='left'/>  \r\n                    {candidate[3].toString()}  \r\n                    <Button id={i} style={{float: 'right'}} onClick={this.vote} primary>Vote!</Button>\r\n                </div>\r\n              ) \r\n            };\r\n            \r\n        });\r\n        this.setState({item: items}); \r\n        } catch(err) {\r\n            console.log(err.message);\r\n            alert(\"Redirecting you to login page...\");\r\n            Router.pushRoute('/company_login');\r\n        }\r\n    }\r\n    getElectionDetails = () => {\r\n        const {\r\n            election_name,\r\n            election_description\r\n        } = this.state;\r\n    \r\n        return (\r\n          <div style={{marginLeft: '45%',marginBottom: '2%',marginTop: '2%'}}>\r\n            <Header as=\"h2\">\r\n              <Icon name=\"address card\" />\r\n              <Header.Content>\r\n                {election_name}\r\n                <Header.Subheader>{election_description}</Header.Subheader>\r\n              </Header.Content>\r\n            </Header>\r\n          </div>\r\n        );\r\n      }\r\n\r\n    renderTable = () => {\r\n        return (<Card.Group items={this.state.item}/>)\r\n    } \r\n\r\n    vote = async event => {\r\n        console.log(event.currentTarget.id);\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div> \r\n          <Grid>\r\n            <Grid.Row>\r\n              <Grid.Column width={2}>\r\n                {this.SidebarExampleVisible()}\r\n              </Grid.Column>\r\n              <Layout>                                   \r\n              {this.getElectionDetails()}\r\n              <Grid.Column style={{minHeight: '77vh',marginLeft: '10%'}}>\r\n              <Container>\r\n                       {this.renderTable()}\r\n                    </Container>\r\n              </Grid.Column>      \r\n              </Layout>\r\n            </Grid.Row>\r\n          </Grid>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n\r\nexport default VotingList"]},"metadata":{},"sourceType":"module"}