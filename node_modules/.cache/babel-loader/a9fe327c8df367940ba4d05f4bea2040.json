{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport ipfs from '../ipfs';\nimport web3 from '../Ethereum/web3';\nimport election from '../Ethereum/Election';\n\nvar Test =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Test, _Component);\n\n  function Test() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Test);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Test)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      ipfsHash: null,\n      buffer: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"captureFile\", function (event) {\n      event.stopPropagation();\n      event.preventDefault();\n      var file = event.target.files[0];\n      var reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = function () {\n        return _this.convertToBuffer(reader);\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"convertToBuffer\",\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(reader) {\n        var buffer;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return Buffer.from(reader.result);\n\n              case 2:\n                buffer = _context.sent;\n\n                //set this buffer -using es6 syntax\n                _this.setState({\n                  buffer: buffer\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"onClick\",\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(event) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                event.preventDefault();\n                /*    const accounts = await web3.eth.getAccounts(); */\n\n                _context2.next = 3;\n                return ipfs.files.get(_this.state.ipfsHash, function (err, files) {\n                  files.forEach(function (file) {\n                    console.log(file.path);\n                    console.log(file.content.toString('utf8'));\n                  });\n                });\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\",\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(event) {\n        var accounts;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                event.preventDefault();\n                console.log(\"web3 value is \", web3.eth.getAccounts());\n                _context3.next = 4;\n                return web3.eth.getAccounts();\n\n              case 4:\n                accounts = _context3.sent;\n                console.log('Sending from Metamask account: ', accounts[0]);\n                _context3.next = 8;\n                return ipfs.add(_this.state.buffer, function (err, ipfsHash) {\n                  console.log(err, ipfsHash);\n\n                  _this.setState({\n                    ipfsHash: ipfsHash[0].hash\n                  });\n\n                  election.methods.storeCandHash(_this.state.ipfsHash).send({\n                    from: accounts[0]\n                  });\n                });\n\n              case 8:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n\n    return _this;\n  }\n\n  _createClass(Test, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", null, React.createElement(\"form\", {\n        onSubmit: this.onSubmit\n      }, React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.onChange\n      }), React.createElement(\"button\", {\n        type: \"submit\"\n      }, \"Upload file!\")), React.createElement(\"hr\", null), React.createElement(\"button\", {\n        onClick: this.onClick\n      }, \"Retrieve the image!\"));\n    }\n  }]);\n\n  return Test;\n}(Component);\n\nexport { Test as default };","map":{"version":3,"sources":["D:\\Blockchain\\ProjectEth\\pages\\test.js"],"names":["React","Component","ipfs","web3","election","Test","ipfsHash","buffer","event","stopPropagation","preventDefault","file","target","files","reader","window","FileReader","readAsArrayBuffer","onloadend","convertToBuffer","Buffer","from","result","setState","get","state","err","forEach","console","log","path","content","toString","eth","getAccounts","accounts","add","hash","methods","storeCandHash","send","onSubmit","onChange","onClick"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport ipfs from '../ipfs';\r\nimport web3 from '../Ethereum/web3';\r\nimport election from '../Ethereum/Election';\r\n\r\nexport default class Test extends Component {\r\n    state = {\r\n        ipfsHash: null,\r\n        buffer: ''\r\n    };\r\n    \r\n    captureFile =(event) => {\r\n        event.stopPropagation()\r\n        event.preventDefault()\r\n        const file = event.target.files[0]\r\n        let reader = new window.FileReader()\r\n        reader.readAsArrayBuffer(file)\r\n        reader.onloadend = () => this.convertToBuffer(reader)\r\n    };\r\n\r\n    convertToBuffer = async(reader) => {\r\n        //file is converted to a buffer for upload to IPFS\r\n        const buffer = await Buffer.from(reader.result);\r\n        //set this buffer -using es6 syntax\r\n        this.setState({buffer});\r\n    };\r\n\r\n    onClick = async(event) => {\r\n        event.preventDefault();\r\n\r\n     /*    const accounts = await web3.eth.getAccounts(); */\r\n        await ipfs.files.get(this.state.ipfsHash, function (err, files) {\r\n            files.forEach((file) => {\r\n                console.log(file.path)\r\n                console.log(file.content.toString('utf8'))\r\n              })\r\n          })\r\n    };\r\n\r\n    onSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        console.log(\"web3 value is \",web3.eth.getAccounts());\r\n        const accounts = await web3.eth.getAccounts();\r\n        console.log('Sending from Metamask account: ' , accounts[0]);\r\n\r\n        await ipfs.add(this.state.buffer, (err, ipfsHash) => {\r\n            console.log(err,ipfsHash);\r\n            this.setState({ ipfsHash:ipfsHash[0].hash});\r\n\r\n            election.methods.storeCandHash(this.state.ipfsHash).send({\r\n                from: accounts[0]\r\n            });\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <input type=\"file\" onChange={this.onChange}/>\r\n                    <button type=\"submit\">Upload file!</button>\r\n                </form>\r\n                <hr/>\r\n                <button onClick={this.onClick}>Retrieve the image!</button>\r\n            </div>\r\n        );    \r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}