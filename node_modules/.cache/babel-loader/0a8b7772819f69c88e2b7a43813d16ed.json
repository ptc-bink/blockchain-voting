{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React, { Component } from 'react';\nimport Layout from '../../components/Layout';\nimport Campaign from '../../Ethereum/campaign';\nimport { Card, Grid } from 'semantic-ui-react';\nimport web3 from '../../Ethereum/web3';\nimport Contribute from '../../components/ContributeForm';\nimport ContributeForm from '../../components/ContributeForm';\n\nvar ShowCampaign =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ShowCampaign, _Component);\n\n  function ShowCampaign() {\n    _classCallCheck(this, ShowCampaign);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ShowCampaign).apply(this, arguments));\n  }\n\n  _createClass(ShowCampaign, [{\n    key: \"renderCards\",\n    value: function renderCards() {\n      var _this$props = this.props,\n          balance = _this$props.balance,\n          manager = _this$props.manager,\n          minCont = _this$props.minCont,\n          requestsCount = _this$props.requestsCount,\n          approversCount = _this$props.approversCount;\n      var items = [{\n        header: manager,\n        description: 'Manager created the campaign; Can create requests',\n        meta: 'Address of Manager',\n        style: {\n          overflowWrap: 'break-word'\n        }\n      }, {\n        header: web3.utils.fromWei(balance, 'ether'),\n        description: 'Amount donated in the campaign',\n        meta: 'Campaign Balance(Ether)',\n        style: {\n          overflowWrap: 'break-word'\n        }\n      }, {\n        header: minCont,\n        description: 'Mininum Contribution required to contribute',\n        meta: 'Mininum Contribution (Wei)',\n        style: {\n          overflowWrap: 'break-word'\n        }\n      }, {\n        header: requestsCount,\n        description: 'Number of contributors for the campaign',\n        meta: 'No. of Contributors',\n        style: {\n          overflowWrap: 'break-word'\n        }\n      }, {\n        header: approversCount,\n        description: 'Number of approvers for the campaign',\n        meta: 'No. of Approvers',\n        style: {\n          overflowWrap: 'break-word'\n        }\n      }];\n      return React.createElement(Card.Group, {\n        items: items\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Layout, null, React.createElement(\"h3\", null, \"Campaign Details\"), React.createElement(Grid, null, React.createElement(Grid.Column, {\n        width: 10\n      }, this.renderCards()), React.createElement(Grid.Column, {\n        width: 6\n      }, React.createElement(ContributeForm, {\n        address: this.props.address\n      }))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(props) {\n        var campaign, summary;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                campaign = Campaign(props.query.address);\n                _context.next = 3;\n                return campaign.methods.getSummary().call();\n\n              case 3:\n                summary = _context.sent;\n                console.table(summary);\n                return _context.abrupt(\"return\", {\n                  minCont: summary[0],\n                  balance: summary[1],\n                  requestsCount: summary[2],\n                  approversCount: summary[3],\n                  manager: summary[4]\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return ShowCampaign;\n}(Component);\n\nexport default ShowCampaign;","map":{"version":3,"sources":["D:\\Blockchain\\Campaign\\pages\\campaigns\\show.js"],"names":["React","Component","Layout","Campaign","Card","Grid","web3","Contribute","ContributeForm","ShowCampaign","props","balance","manager","minCont","requestsCount","approversCount","items","header","description","meta","style","overflowWrap","utils","fromWei","renderCards","address","campaign","query","methods","getSummary","call","summary","console","table"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport Layout from '../../components/Layout';\r\nimport Campaign from '../../Ethereum/campaign';\r\nimport {Card, Grid} from 'semantic-ui-react';\r\nimport web3 from '../../Ethereum/web3';\r\nimport Contribute from '../../components/ContributeForm';\r\nimport ContributeForm from '../../components/ContributeForm';\r\n\r\nclass ShowCampaign extends Component {\r\n    static async getInitialProps(props) {\r\n       const campaign = Campaign(props.query.address);\r\n       const summary = await campaign.methods.getSummary().call();\r\n       console.table(summary); \r\n       return{\r\n           minCont: summary[0],\r\n           balance: summary[1],\r\n           requestsCount: summary[2],\r\n           approversCount: summary[3],\r\n           manager: summary[4]\r\n       };       \r\n    }\r\n\r\n    renderCards() {\r\n        const {\r\n            balance,\r\n            manager,\r\n            minCont,\r\n            requestsCount,\r\n            approversCount\r\n        } = this.props;\r\n\r\n        const items = [\r\n          {\r\n            header: manager,\r\n            description: 'Manager created the campaign; Can create requests',\r\n            meta: 'Address of Manager',\r\n            style: {overflowWrap: 'break-word'}\r\n          },\r\n          {\r\n            header: web3.utils.fromWei(balance,'ether'),\r\n            description: 'Amount donated in the campaign',\r\n            meta: 'Campaign Balance(Ether)',\r\n            style: {overflowWrap: 'break-word'}\r\n          },\r\n          {\r\n            header: minCont,\r\n            description: 'Mininum Contribution required to contribute',\r\n            meta: 'Mininum Contribution (Wei)',  \r\n            style: {overflowWrap: 'break-word'}\r\n          },\r\n          {\r\n            header: requestsCount,\r\n            description: 'Number of contributors for the campaign',\r\n            meta: 'No. of Contributors', \r\n            style: {overflowWrap: 'break-word'} \r\n          },\r\n          {\r\n            header: approversCount,\r\n            description: 'Number of approvers for the campaign',\r\n            meta: 'No. of Approvers',  \r\n            style: {overflowWrap: 'break-word'}\r\n          }\r\n        ];\r\n\r\n        return <Card.Group items={items} />     \r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <Layout>\r\n                <h3>Campaign Details</h3>\r\n                <Grid>\r\n                    <Grid.Column width={10}>\r\n                      {this.renderCards()}\r\n                    </Grid.Column>\r\n                    \r\n                    <Grid.Column width={6}>\r\n                      <ContributeForm address={this.props.address}/>\r\n                    </Grid.Column>\r\n                </Grid>                \r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShowCampaign;"]},"metadata":{},"sourceType":"module"}