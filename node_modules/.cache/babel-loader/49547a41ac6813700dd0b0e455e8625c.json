{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _getIterator from \"@babel/runtime-corejs2/core-js/get-iterator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport { Grid, Table, Button, Form, Input, Icon, Menu, Modal, Sidebar, Container, Card } from 'semantic-ui-react';\nimport Layout from '../../components/Layout';\nimport Cookies from 'js-cookie';\nimport { Router } from '../../routes';\nimport Election from '../../Ethereum/election';\n\nvar VotingList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(VotingList, _Component);\n\n  function VotingList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, VotingList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(VotingList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      election_address: Cookies.get('address'),\n      election_name: '',\n      election_description: '',\n      emailArr: [],\n      idArr: [],\n      item: []\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"deleteEmail\", function () {\n      console.log(_this.id);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderTable\", function () {\n      return React.createElement(Card.Group, {\n        items: _this.state.item\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"GridExampleGrid\", function () {\n      return React.createElement(Grid, null, columns);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"SidebarExampleVisible\", function () {\n      return React.createElement(Sidebar.Pushable, null, React.createElement(Sidebar, {\n        as: Menu,\n        animation: \"overlay\",\n        icon: \"labeled\",\n        inverted: true,\n        vertical: true,\n        visible: true,\n        width: \"thin\",\n        style: {\n          backgroundColor: 'white',\n          borderWidth: \"10px\"\n        }\n      }, React.createElement(Menu.Item, {\n        as: \"a\",\n        style: {\n          color: 'grey'\n        }\n      }, React.createElement(\"h2\", null, \"MENU\"), React.createElement(\"hr\", null)), React.createElement(Menu.Item, {\n        as: \"a\",\n        style: {\n          color: 'grey'\n        }\n      }, React.createElement(Icon, {\n        name: \"dashboard\"\n      }), \"Dashboard\"), React.createElement(Menu.Item, {\n        as: \"a\",\n        style: {\n          color: 'grey'\n        }\n      }, React.createElement(Icon, {\n        name: \"user outline\"\n      }), \"Candidate List\"), React.createElement(Menu.Item, {\n        as: \"a\",\n        style: {\n          color: 'grey'\n        }\n      }, React.createElement(Icon, {\n        name: \"list\"\n      }), \"Voter List\"), React.createElement(Menu.Item, {\n        as: \"a\",\n        style: {\n          color: 'grey'\n        }\n      }, React.createElement(Icon, {\n        name: \"sign out\"\n      }), \"Sign Out\")));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"register\", function (event) {\n      var email = document.getElementById('register_voter_email').value; //const election_address = 'abc'; //change to state variable\n\n      var http = new XMLHttpRequest();\n      var url = \"/voter/register\";\n      var params = \"email=\" + email + \"&election_address=\" + _this.state.election_address + \"&election_name=\" + _this.state.election_name + \"&election_description=\" + _this.state.election_description;\n      http.open(\"POST\", url, true); //Send the proper header information along with the request\n\n      http.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n\n      http.onreadystatechange = function () {\n        //Call a function when the state changes.\n        if (http.readyState == 4 && http.status == 200) {\n          var responseObj = JSON.parse(http.responseText);\n\n          if (responseObj.status == \"success\") {\n            alert(responseObj.message); //window.location(\"localhost:3000\");\n          } else {\n            alert(responseObj.message);\n          }\n        }\n      };\n\n      http.send(params);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mail_to_all\", function (event) {\n      var http = new XMLHttpRequest();\n      var url = \"voter/sendMail\";\n      var params = \"election_address=\" + _this.state.election_address + \"&election_name=\" + _this.state.election_name + \"&election_description=\" + _this.state.election_description;\n      http.open(\"POST\", url, true); //Send the proper header information along with the request\n\n      http.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n\n      http.onreadystatechange = function () {\n        //Call a function when the state changes.\n        if (http.readyState == 4 && http.status == 200) {\n          var responseObj = JSON.parse(http.responseText);\n\n          if (responseObj.status == \"success\") {\n            alert(responseObj.message);\n          } else {\n            alert(responseObj.message);\n          }\n        }\n      };\n\n      http.send(params);\n    });\n\n    return _this;\n  }\n\n  _createClass(VotingList, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var http, url, email, id, add, election, summary, ea, ia, i, items;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                http = new XMLHttpRequest();\n                url = '/voter/';\n                http.open(\"GET\", url, true);\n                email = [];\n                id = []; //Send the proper header information along with the request\n\n                http.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n\n                http.onreadystatechange = function () {\n                  //Call a function when the state changes.\n                  if (http.readyState == 4 && http.status == 200) {\n                    var responseObj = JSON.parse(http.responseText);\n\n                    if (responseObj.status == \"success\") {\n                      var _iteratorNormalCompletion = true;\n                      var _didIteratorError = false;\n                      var _iteratorError = undefined;\n\n                      try {\n                        for (var _iterator = _getIterator(responseObj.data.voters), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                          var voter = _step.value;\n                          email.push(voter.email);\n                          id.push(voter.id);\n                        }\n                      } catch (err) {\n                        _didIteratorError = true;\n                        _iteratorError = err;\n                      } finally {\n                        try {\n                          if (!_iteratorNormalCompletion && _iterator.return != null) {\n                            _iterator.return();\n                          }\n                        } finally {\n                          if (_didIteratorError) {\n                            throw _iteratorError;\n                          }\n                        }\n                      }\n                    }\n                  }\n                };\n\n                http.send();\n                this.state.emailArr.push(email);\n                console.log(this.state.emailArr);\n                this.state.idArr.push(id);\n                _context.prev = 11;\n                add = Cookies.get('address');\n                election = Election(add);\n                _context.next = 16;\n                return election.methods.getElectionDetails().call();\n\n              case 16:\n                summary = _context.sent;\n                this.setState({\n                  election_name: summary[0],\n                  election_description: summary[1]\n                });\n                _context.next = 25;\n                break;\n\n              case 20:\n                _context.prev = 20;\n                _context.t0 = _context[\"catch\"](11);\n                console.log(_context.t0.message);\n                alert(\"Redirecting you to login page...\");\n                Router.pushRoute('/company_login');\n\n              case 25:\n                ea = [];\n                ea = this.state.emailArr[0];\n                ia = [];\n                ia = this.state.idArr[0];\n                console.log(ea);\n                i = -1;\n                items = ia.map(function (ia) {\n                  i++;\n                  return {\n                    header: email[i],\n                    description: React.createElement(\"div\", null, React.createElement(\"br\", null), React.createElement(Modal, {\n                      size: \"tiny\",\n                      trigger: React.createElement(Button, {\n                        basic: true,\n                        id: ia,\n                        color: \"green\"\n                      }, \"Edit\"),\n                      closeIcon: true\n                    }, React.createElement(Modal.Header, null, \"Edit E-mail ID\"), React.createElement(\"center\", null, React.createElement(Modal.Content, null, React.createElement(Input, {\n                      id: \"Email\".concat(ia),\n                      placeholder: \"E-mail ID\",\n                      style: {\n                        marginBottom: '5%',\n                        marginTop: '5%'\n                      }\n                    })), React.createElement(Modal.Actions, null, React.createElement(Button, {\n                      positive: true,\n                      icon: \"checkmark\",\n                      labelPosition: \"right\",\n                      content: \"Yes\",\n                      padding: \"30\",\n                      style: {\n                        marginBottom: \"10px\"\n                      }\n                    }), React.createElement(Button, {\n                      negative: true\n                    }, \"No\")))), React.createElement(Button, {\n                      negative: true,\n                      basic: true,\n                      id: ia,\n                      onClick: _this2.deleteEmail(_this2)\n                    }, \"Delete\"))\n                  };\n                });\n                this.setState({\n                  item: items\n                });\n\n              case 33:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[11, 20]]);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"renderRows\",\n    value: function renderRows() {\n      return this.state;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var Body = Table.Body,\n          Row = Table.Row,\n          HeaderCell = Table.HeaderCell,\n          Header = Table.Header;\n      return React.createElement(\"div\", null, React.createElement(Grid, null, React.createElement(Grid.Row, null, React.createElement(Grid.Column, {\n        width: 2\n      }, this.SidebarExampleVisible()), React.createElement(Layout, null, React.createElement(\"br\", null), React.createElement(\"br\", null), React.createElement(Grid.Column, {\n        width: 14,\n        style: {\n          minHeight: '630px'\n        }\n      }, React.createElement(Grid.Column, {\n        style: {\n          float: 'left',\n          width: '60%'\n        }\n      }, React.createElement(Header, {\n        as: \"h2\",\n        color: \"black\"\n      }, \"Voter List\"), React.createElement(Container, null, React.createElement(\"table\", null, this.renderTable()))), React.createElement(Grid.Column, {\n        style: {\n          float: 'right',\n          width: '30%'\n        }\n      }, React.createElement(Container, {\n        style: {}\n      }, React.createElement(Header, {\n        as: \"h2\",\n        color: \"black\"\n      }, \"Register Voter\"), React.createElement(Card, {\n        style: {\n          width: '100%'\n        }\n      }, React.createElement(\"br\", null), React.createElement(Form.Group, {\n        size: \"large\",\n        style: {\n          marginLeft: '15%',\n          marginRight: '15%'\n        }\n      }, React.createElement(Form.Input, {\n        style: {\n          marginTop: '10px'\n        },\n        fluid: true,\n        id: \"register_voter_email\",\n        label: \"Email:\",\n        placeholder: \"Enter your email.\",\n        textAlign: \"center\"\n      }), React.createElement(\"br\", null), React.createElement(\"br\", null), React.createElement(Button, {\n        primary: true,\n        style: {\n          Bottom: '10px',\n          marginBottom: '15px'\n        },\n        onClick: this.register\n      }, \"Register\"))))))))));\n    }\n  }]);\n\n  return VotingList;\n}(Component);\n\nexport default VotingList;","map":{"version":3,"sources":["D:\\Blockchain\\BlockChainVoting\\pages\\election\\voting_list.js"],"names":["React","Component","Grid","Table","Button","Form","Input","Icon","Menu","Modal","Sidebar","Container","Card","Layout","Cookies","Router","Election","VotingList","election_address","get","election_name","election_description","emailArr","idArr","item","console","log","id","state","columns","backgroundColor","borderWidth","color","event","email","document","getElementById","value","http","XMLHttpRequest","url","params","open","setRequestHeader","onreadystatechange","readyState","status","responseObj","JSON","parse","responseText","alert","message","send","data","voters","voter","push","add","election","methods","getElectionDetails","call","summary","setState","pushRoute","ea","ia","i","items","map","header","description","marginBottom","marginTop","deleteEmail","Body","Row","HeaderCell","Header","SidebarExampleVisible","minHeight","float","width","renderTable","marginLeft","marginRight","Bottom","register"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Grid, Table, Button, Form, Input, Icon, Menu, Modal, Sidebar, Container, Card } from 'semantic-ui-react';\r\nimport Layout from '../../components/Layout';\r\nimport Cookies from 'js-cookie';\r\nimport {Router} from '../../routes';\r\nimport Election from '../../Ethereum/election';\r\nclass VotingList extends Component { \r\n\r\n    state = {\r\n        election_address: Cookies.get('address'),\r\n        election_name: '',\r\n        election_description: '',\r\n        emailArr: [],\r\n        idArr: [],\r\n        item: [] \r\n    }\r\n\r\n    async componentDidMount() {\r\n        var http = new XMLHttpRequest();\r\n        var url = '/voter/';        \r\n        http.open(\"GET\", url, true);\r\n        let email=[];\r\n        let id=[]\r\n        //Send the proper header information along with the request\r\n        http.setRequestHeader(\r\n            \"Content-type\",\r\n            \"application/x-www-form-urlencoded\"\r\n        );\r\n        http.onreadystatechange = function() {\r\n            //Call a function when the state changes.\r\n            if (http.readyState == 4 && http.status == 200) {\r\n                var responseObj = JSON.parse(http.responseText);\r\n                if(responseObj.status==\"success\") {\r\n                  for (let voter of responseObj.data.voters) {\r\n                        email.push(voter.email);\r\n                        id.push(voter.id);    \r\n                  } \r\n                }                \r\n            }\r\n        };\r\n        http.send();\r\n        this.state.emailArr.push(email);\r\n        console.log(this.state.emailArr);\r\n        this.state.idArr.push(id);\r\n\r\n        try {\r\n            const add = Cookies.get('address');\r\n            const election = Election(add);\r\n            const summary = await election.methods.getElectionDetails().call();\r\n            this.setState({\r\n                election_name: summary[0],\r\n                election_description: summary[1]\r\n            });\r\n\r\n        } catch(err) {\r\n            console.log(err.message);\r\n            alert(\"Redirecting you to login page...\");\r\n            Router.pushRoute('/company_login');\r\n        }\r\n        let ea = [];\r\n        ea = this.state.emailArr[0];\r\n        let ia = [];\r\n        ia = this.state.idArr[0];   \r\n        console.log(ea);             \r\n        \r\n        let i=-1;\r\n        const items = ia.map(ia => {\r\n            i++;\r\n            return {\r\n              header: email[i],\r\n              description: (\r\n                <div>                \r\n                  <br />\r\n                  \r\n                  <Modal\r\n                    size={\"tiny\"}\r\n                    trigger={\r\n                      <Button basic id={ia} color=\"green\">                        \r\n                        Edit\r\n                      </Button>\r\n                    }\r\n                    closeIcon\r\n                  >\r\n                    <Modal.Header>Edit E-mail ID</Modal.Header>\r\n                    <center>\r\n                      <Modal.Content>\r\n                        <Input id={`Email${ia}`} placeholder='E-mail ID' style={{marginBottom: '5%',marginTop: '5%'}}/>\r\n                      </Modal.Content>\r\n                      <Modal.Actions>\r\n                        <Button\r\n                          positive\r\n                          icon=\"checkmark\"\r\n                          labelPosition=\"right\"\r\n                          content=\"Yes\"\r\n                          padding=\"30\"\r\n                          style={{ marginBottom: \"10px\" }}\r\n                        />\r\n                        <Button negative>No</Button>\r\n                      </Modal.Actions>\r\n                    </center>\r\n                  </Modal>\r\n                  <Button negative basic id={ia} onClick={this.deleteEmail(this)}>Delete</Button>\r\n                </div>\r\n              )\r\n            };\r\n        });\r\n        this.setState({item: items});\r\n    }\r\n\r\n    deleteEmail = () => {\r\n        console.log(this.id);\r\n    }\r\n\r\n    renderTable = () => {\r\n        return (<Card.Group items={this.state.item}/>)\r\n    } \r\n\r\n  GridExampleGrid = () => <Grid>{columns}</Grid>\r\n  SidebarExampleVisible = () => (\r\n\r\n    <Sidebar.Pushable>\r\n      <Sidebar as={Menu} animation='overlay' icon='labeled' inverted vertical visible width='thin' style={{ backgroundColor: 'white', borderWidth: \"10px\" }}>\r\n        <Menu.Item as='a' style={{ color: 'grey' }} >\r\n          <h2>MENU</h2><hr />\r\n        </Menu.Item>\r\n        <Menu.Item as='a' style={{ color: 'grey' }} >\r\n          <Icon name='dashboard' />\r\n          Dashboard\r\n          </Menu.Item>\r\n        <Menu.Item as='a' style={{ color: 'grey' }}>\r\n          <Icon name='user outline' />\r\n          Candidate List\r\n          </Menu.Item>\r\n        <Menu.Item as='a' style={{ color: 'grey' }}>\r\n          <Icon name='list' />\r\n          Voter List\r\n          </Menu.Item>\r\n        <Menu.Item as='a' style={{ color: 'grey' }}>\r\n          <Icon name='sign out' />\r\n          Sign Out\r\n          </Menu.Item>\r\n\r\n      </Sidebar>\r\n    </Sidebar.Pushable>\r\n  )\r\n\r\n    register = event => {\r\n\r\n\t\tconst email = document.getElementById('register_voter_email').value;\r\n    //const election_address = 'abc'; //change to state variable\r\n    \r\n\t\tvar http = new XMLHttpRequest();\r\n        var url = \"/voter/register\";\r\n        var params = \"email=\" + email+\"&election_address=\" + this.state.election_address+ \"&election_name=\" + this.state.election_name + \"&election_description=\" + this.state.election_description;\r\n        http.open(\"POST\", url, true);\r\n        //Send the proper header information along with the request\r\n        http.setRequestHeader(\r\n            \"Content-type\",\r\n            \"application/x-www-form-urlencoded\"\r\n        );\r\n        http.onreadystatechange = function() {\r\n            //Call a function when the state changes.\r\n            if (http.readyState == 4 && http.status == 200) {\r\n                var responseObj = JSON.parse(http.responseText);\r\n                if(responseObj.status==\"success\") {\r\n                  alert(responseObj.message);\r\n                  //window.location(\"localhost:3000\");\r\n                }\r\n                else {\r\n                  alert(responseObj.message);\r\n                }\r\n            }\r\n        };\r\n    \thttp.send(params);\r\n\t}\r\n\t\r\n\tmail_to_all = event => {\t\t\r\n\t\tvar http = new XMLHttpRequest();\r\n        var url = \"voter/sendMail\";\r\n        var params = \"election_address=\" + this.state.election_address + \"&election_name=\" + this.state.election_name + \"&election_description=\" + this.state.election_description;\r\n        http.open(\"POST\", url, true);\r\n        //Send the proper header information along with the request\r\n        http.setRequestHeader(\r\n            \"Content-type\",\r\n            \"application/x-www-form-urlencoded\"\r\n        );\r\n        http.onreadystatechange = function() {\r\n            //Call a function when the state changes.\r\n            if (http.readyState == 4 && http.status == 200) {\r\n                var responseObj = JSON.parse(http.responseText);\r\n                if(responseObj.status==\"success\") {\r\n                  alert(responseObj.message);                  \r\n                }\r\n                else {\r\n                  alert(responseObj.message);\r\n                }\r\n            }\r\n        };\r\n    \thttp.send(params);\r\n\t}\r\n\r\n  renderRows() {\r\n      return(\r\n          this.state\r\n      )\r\n  }\r\n\r\n  render() {\r\n      const {Body, Row, HeaderCell, Header} = Table;\r\n    return (\r\n      <div>\r\n        <Grid>\r\n          <Grid.Row>\r\n            <Grid.Column width={2}>\r\n              {this.SidebarExampleVisible()}\r\n            </Grid.Column>\r\n            <Layout>                      \r\n              <br />\r\n              <br />\r\n              <Grid.Column width={14} style={{ minHeight: '630px' }}>\r\n                <Grid.Column style={{ float: 'left', width: '60%' }}>\r\n                  <Header as='h2' color='black'>\r\n                    Voter List\r\n              </Header>\r\n                  <Container>                      \r\n                      <table>\r\n                      {this.renderTable()}\r\n                      </table>                                        \r\n                  </Container>\r\n                </Grid.Column>\r\n                <Grid.Column style={{ float: 'right', width: '30%' }}>\r\n                  <Container style={{}}>\r\n                    <Header as='h2' color='black'>\r\n                      Register Voter\r\n                       </Header>\r\n                    <Card style={{ width: '100%' }}>\r\n                      <br/>\r\n                      <Form.Group size='large' style={{ marginLeft: '15%', marginRight: '15%' }} >\r\n                        <Form.Input\r\n\t\t\t\t\t\tstyle={{marginTop: '10px'}}\r\n                          fluid\r\n                          id='register_voter_email'\r\n                          label='Email:'\r\n                          placeholder='Enter your email.'\r\n                          textAlign='center'\r\n                        />\r\n\r\n                        <br /><br />\r\n                        <Button primary style={{ Bottom: '10px', marginBottom: '15px' }} onClick={this.register}>Register</Button>\r\n                      </Form.Group>\r\n                    </Card>\r\n                  </Container>\r\n                </Grid.Column>                \r\n              </Grid.Column>\r\n            </Layout>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default VotingList"]},"metadata":{},"sourceType":"module"}