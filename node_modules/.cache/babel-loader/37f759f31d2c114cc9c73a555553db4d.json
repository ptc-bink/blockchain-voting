{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React, { Component } from 'react';\nimport Layout from '../../components/Layout';\nimport Campaign from '../../Ethereum/campaign';\nimport { Card } from 'semantic-ui-react';\n\nvar ShowCampaign =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ShowCampaign, _Component);\n\n  function ShowCampaign() {\n    _classCallCheck(this, ShowCampaign);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ShowCampaign).apply(this, arguments));\n  }\n\n  _createClass(ShowCampaign, [{\n    key: \"render\",\n\n    /*renderCards() {\r\n        const {\r\n            balance,\r\n            manager,\r\n            minCont,\r\n            requestsCount,\r\n            approversCount\r\n        } = this.props;\r\n          const items = [\r\n          {\r\n            header: manager,\r\n            description: 'Manager created the campaign; Can create requests',\r\n            meta: 'Address of Manager',\r\n          },\r\n          {\r\n            header: balance,\r\n            description: 'Amount donated in the campaign',\r\n            meta: 'Balance',\r\n          },\r\n          {\r\n            header: minCont,\r\n            description: 'Mininum Contribution required to contribute',\r\n            meta: 'Mininum Contribution'  \r\n          },\r\n          {\r\n            header: requestsCount,\r\n            description: 'Number of contributors for the campaign',\r\n            meta: 'No. of Contributors',  \r\n          },\r\n          {\r\n            header: approversCount,\r\n            description: 'Number of approvers for the campaign',\r\n            meta: 'No. of Approvers',  \r\n          }\r\n        ];\r\n          return <Card.Group items={items} />\r\n        {this.renderCards()}\r\n    }*/\n    value: function render() {\n      return React.createElement(Layout, null, React.createElement(\"h3\", null, \"Campaign Details\"));\n    }\n  }], [{\n    key: \"getInititalProps\",\n    value: function () {\n      var _getInititalProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(props) {\n        var campaign, summary;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                campaign = Campaign(props.query.address);\n                _context.next = 3;\n                return campaign.methods.getSummary().call();\n\n              case 3:\n                summary = _context.sent;\n                return _context.abrupt(\"return\", {\n                  minCont: summary[0],\n                  balance: summary[1],\n                  requestsCount: summary[2],\n                  approversCount: summary[3],\n                  manager: summary[4]\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInititalProps(_x) {\n        return _getInititalProps.apply(this, arguments);\n      }\n\n      return getInititalProps;\n    }()\n  }]);\n\n  return ShowCampaign;\n}(Component);\n\nexport default ShowCampaign;","map":{"version":3,"sources":["D:\\Blockchain\\Campaign\\pages\\campaigns\\show.js"],"names":["React","Component","Layout","Campaign","Card","ShowCampaign","props","campaign","query","address","methods","getSummary","call","summary","minCont","balance","requestsCount","approversCount","manager"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAAQC,IAAR,QAAmB,mBAAnB;;IAEMC,Y;;;;;;;;;;;;;;AAeF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6BAyCS;AACL,aACI,oBAAC,MAAD,QACI,mDADJ,CADJ;AAMH;;;;;;gDA9D6BC,K;;;;;;AACrBC,gBAAAA,Q,GAAWJ,QAAQ,CAACG,KAAK,CAACE,KAAN,CAAYC,OAAb,C;;uBACHF,QAAQ,CAACG,OAAT,CAAiBC,UAAjB,GAA8BC,IAA9B,E;;;AAAhBC,gBAAAA,O;iDAEA;AACFC,kBAAAA,OAAO,EAAED,OAAO,CAAC,CAAD,CADd;AAEFE,kBAAAA,OAAO,EAAEF,OAAO,CAAC,CAAD,CAFd;AAGFG,kBAAAA,aAAa,EAAEH,OAAO,CAAC,CAAD,CAHpB;AAIFI,kBAAAA,cAAc,EAAEJ,OAAO,CAAC,CAAD,CAJrB;AAKFK,kBAAAA,OAAO,EAAEL,OAAO,CAAC,CAAD;AALd,iB;;;;;;;;;;;;;;;;;;;EALcZ,S;;AAkE3B,eAAeI,YAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport Layout from '../../components/Layout';\r\nimport Campaign from '../../Ethereum/campaign';\r\nimport {Card} from 'semantic-ui-react';\r\n\r\nclass ShowCampaign extends Component {\r\n    static async getInititalProps(props) {\r\n       const campaign = Campaign(props.query.address);\r\n       const summary = await campaign.methods.getSummary().call();\r\n\r\n       return{\r\n           minCont: summary[0],\r\n           balance: summary[1],\r\n           requestsCount: summary[2],\r\n           approversCount: summary[3],\r\n           manager: summary[4]\r\n       };\r\n       return{ };\r\n    }\r\n\r\n    /*renderCards() {\r\n        const {\r\n            balance,\r\n            manager,\r\n            minCont,\r\n            requestsCount,\r\n            approversCount\r\n        } = this.props;\r\n\r\n        const items = [\r\n          {\r\n            header: manager,\r\n            description: 'Manager created the campaign; Can create requests',\r\n            meta: 'Address of Manager',\r\n          },\r\n          {\r\n            header: balance,\r\n            description: 'Amount donated in the campaign',\r\n            meta: 'Balance',\r\n          },\r\n          {\r\n            header: minCont,\r\n            description: 'Mininum Contribution required to contribute',\r\n            meta: 'Mininum Contribution'  \r\n          },\r\n          {\r\n            header: requestsCount,\r\n            description: 'Number of contributors for the campaign',\r\n            meta: 'No. of Contributors',  \r\n          },\r\n          {\r\n            header: approversCount,\r\n            description: 'Number of approvers for the campaign',\r\n            meta: 'No. of Approvers',  \r\n          }\r\n        ];\r\n\r\n        return <Card.Group items={items} />\r\n        {this.renderCards()}\r\n    }*/\r\n    \r\n    render() {\r\n        return (\r\n            <Layout>\r\n                <h3>Campaign Details</h3>\r\n                \r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShowCampaign;"]},"metadata":{},"sourceType":"module"}