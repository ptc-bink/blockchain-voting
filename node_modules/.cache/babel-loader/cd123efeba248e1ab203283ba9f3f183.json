{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport { Button, Divider, Icon, Image, Transition, Form, Grid, Segment, ButtonGroup } from 'semantic-ui-react';\nimport \"../static/test.css\";\n\nvar DividerExampleVerticalForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DividerExampleVerticalForm, _Component);\n\n  function DividerExampleVerticalForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DividerExampleVerticalForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DividerExampleVerticalForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      visible: true\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleVisibility\", function () {\n      return _this.setState({\n        visible: !_this.state.visible\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(DividerExampleVerticalForm, [{\n    key: \"render\",\n    // DividerExampleVerticalForm = () => (\n\n    /* <div className='login-form'>\r\n      <style JSX>{`\r\n          .login-form {\r\n              width:100vw;\r\n              height:100vh;\r\n              position:absolute;\r\n              background: url('/static/blockchain.jpg') no-repeat;\r\n          }\r\n        `}</style>\r\n    </div> */\n    // <Image src=\"/static/blockchain.jpg\"/>\n    // )\n    value: function render() {\n      var visible = this.state.visible;\n      return React.createElement(\"div\", null, React.createElement(Image, {\n        src: \"/static/blockchain.jpg\"\n      }), React.createElement(Button.Group, null, React.createElement(Button, {\n        primary: true,\n        content: 'Signup',\n        onClick: this.toggleVisibility\n      }), React.createElement(Button.Or, null), React.createElement(Button, {\n        primary: true,\n        content: 'Login',\n        onClick: this.toggleVisibility\n      })), React.createElement(Divider, null), React.createElement(Grid, {\n        className: \"grid1\"\n      }, React.createElement(Grid.Row, null, React.createElement(Grid.Column, {\n        width: 3\n      }), React.createElement(Grid.Column, {\n        width: 10,\n        verticalAlign: \"middle\"\n      }, React.createElement(Segment, {\n        placeholder: true,\n        className: \"segment\"\n      }, React.createElement(Transition, {\n        visible: !this.state.visible,\n        animation: \"scale\",\n        duration: 300\n      }, React.createElement(Form, {\n        size: \"large\"\n      }, React.createElement(\"h3\", {\n        style: {\n          textAlign: \"center\"\n        }\n      }, \"Login\"), React.createElement(Form.Input, {\n        fluid: true,\n        icon: \"user\",\n        iconPosition: \"left\",\n        placeholder: \"Email\",\n        style: {\n          padding: 5\n        }\n      }), React.createElement(Form.Input, {\n        style: {\n          padding: 5\n        },\n        fluid: true,\n        icon: \"lock\",\n        iconPosition: \"left\",\n        placeholder: \"Password\",\n        type: \"password\"\n      }), React.createElement(Button, {\n        color: \"blue\",\n        fluid: true,\n        size: \"large\",\n        style: {\n          marginBottom: 15\n        }\n      }, \"Submit\"))), React.createElement(Transition, {\n        visible: this.state.visible,\n        animation: \"scale\",\n        duration: 300\n      }, React.createElement(Form, {\n        size: \"large\"\n      }, React.createElement(\"h3\", {\n        style: {\n          textAlign: \"center\"\n        }\n      }, \"Sign up\"), React.createElement(Form.Input, {\n        fluid: true,\n        icon: \"user\",\n        iconPosition: \"left\",\n        placeholder: \"Email\",\n        style: {\n          padding: 5\n        }\n      }), React.createElement(Form.Input, {\n        style: {\n          padding: 5\n        },\n        fluid: true,\n        icon: \"lock\",\n        iconPosition: \"left\",\n        placeholder: \"Password\",\n        type: \"password\"\n      }), React.createElement(Form.Input, {\n        style: {\n          padding: 5\n        },\n        fluid: true,\n        icon: \"lock\",\n        iconPosition: \"left\",\n        placeholder: \"Repeat Password\",\n        type: \"password\"\n      }), React.createElement(Button, {\n        color: \"blue\",\n        fluid: true,\n        size: \"large\",\n        style: {\n          marginBottom: 15\n        }\n      }, \"Submit\"))))))));\n    }\n  }]);\n\n  return DividerExampleVerticalForm;\n}(Component);\n\nexport default DividerExampleVerticalForm;","map":{"version":3,"sources":["D:\\Blockchain\\ProjectEth\\pages\\vdivider.js"],"names":["React","Component","Button","Divider","Icon","Image","Transition","Form","Grid","Segment","ButtonGroup","DividerExampleVerticalForm","visible","setState","state","toggleVisibility","textAlign","padding","marginBottom"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Button, Divider,Icon,Image, Transition, Form, Grid, Segment, ButtonGroup } from 'semantic-ui-react'\r\nimport \"../static/test.css\";\r\n\r\nclass DividerExampleVerticalForm extends Component {\r\n  state = { visible: true }\r\n  toggleVisibility = () => this.setState({ visible: !this.state.visible })\r\n  // DividerExampleVerticalForm = () => (\r\n    /* <div className='login-form'>\r\n      <style JSX>{`\r\n          .login-form {\r\n              width:100vw;\r\n              height:100vh;\r\n              position:absolute;\r\n              background: url('/static/blockchain.jpg') no-repeat;\r\n          }\r\n        `}</style>\r\n    </div> */\r\n    // <Image src=\"/static/blockchain.jpg\"/>\r\n  // )\r\n  render() {\r\n    const { visible } = this.state\r\n    return (         \r\n       <div>    \r\n      <Image src=\"/static/blockchain.jpg\"/> \r\n        <Button.Group>\r\n        <Button primary content={'Signup'} onClick={this.toggleVisibility}></Button>\r\n        <Button.Or/>\r\n        <Button primary content={'Login'} onClick={this.toggleVisibility}></Button>\r\n        </Button.Group>\r\n        <Divider  />\r\n        <Grid className=\"grid1\">          \r\n          <Grid.Row>\r\n            <Grid.Column width={3}></Grid.Column>\r\n        <Grid.Column width={10} verticalAlign=\"middle\">\r\n          <Segment placeholder className=\"segment\">\r\n          \r\n            <Transition visible={!this.state.visible} animation='scale' duration={300}>\r\n              <Form size='large'>          \r\n              <h3 style={{textAlign:\"center\"}}>Login</h3>\r\n                <Form.Input fluid icon='user' iconPosition='left' placeholder='Email' style={{ padding: 5 }} />\r\n                <Form.Input\r\n                  style={{ padding: 5 }}\r\n                  fluid\r\n                  icon='lock'\r\n                  iconPosition='left'\r\n                  placeholder='Password'\r\n                  type='password'\r\n                />\r\n\r\n                <Button color='blue' fluid size='large' style={{ marginBottom: 15 }}>\r\n                  Submit\r\n              </Button>\r\n                {/* {this.DividerExampleVerticalForm()} */}\r\n\r\n\r\n              </Form>\r\n            </Transition>\r\n\r\n\r\n\r\n            <Transition visible={this.state.visible} animation='scale' duration={300}>\r\n\r\n              <Form size='large'>\r\n                <h3 style={{textAlign:\"center\"}}>Sign up</h3>\r\n                <Form.Input fluid icon='user' iconPosition='left' placeholder='Email' style={{ padding: 5 }} />\r\n                <Form.Input\r\n                  style={{ padding: 5 }}\r\n                  fluid\r\n                  icon='lock'\r\n                  iconPosition='left'\r\n                  placeholder='Password'\r\n                  type='password'\r\n                />\r\n                <Form.Input\r\n                  style={{ padding: 5 }}\r\n                  fluid\r\n                  icon='lock'\r\n                  iconPosition='left'\r\n                  placeholder='Repeat Password'\r\n                  type='password'\r\n                />\r\n                <Button color='blue' fluid size='large' style={{ marginBottom: 15 }}>\r\n                  Submit\r\n              </Button>\r\n              </Form>\r\n\r\n            </Transition>\r\n          </Segment>\r\n\r\n        </Grid.Column>\r\n        </Grid.Row>\r\n        </Grid>\r\n        {/* {this.DividerExampleVerticalForm()} */}       \r\n        </div>\r\n    );\r\n  }\r\n}\r\nexport default DividerExampleVerticalForm"]},"metadata":{},"sourceType":"module"}