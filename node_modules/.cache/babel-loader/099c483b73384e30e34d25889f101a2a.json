{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport { Form, Input, Message, Button } from 'semantic-ui-react';\nimport Campaign from '../Ethereum/campaign';\nimport web3 from '../Ethereum/web3';\n\nvar ContributeForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ContributeForm, _Component);\n\n  function ContributeForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ContributeForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ContributeForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      value: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\",\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        var campaign, accounts;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n                campaign = Campaign(_this.props.address);\n                _context.prev = 2;\n                _context.next = 5;\n                return web3.eth.getAccounts();\n\n              case 5:\n                accounts = _context.sent;\n                _context.next = 8;\n                return campaign.methods.contribute().send({\n                  from: accounts[0],\n                  value: web3.utils.toWei(_this.state.value, 'ether')\n                });\n\n              case 8:\n                _context.next = 12;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](2);\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 10]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    return _this;\n  }\n\n  _createClass(ContributeForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Form, {\n        onSubmit: this.onSubmit\n      }, React.createElement(Form.Field, null, React.createElement(\"label\", null, \"Amount to Contribute\"), React.createElement(Input, {\n        label: \"ether\",\n        labelPosition: \"right\",\n        value: this.state.value,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            value: event.target.value\n          });\n        }\n      })), React.createElement(Button, {\n        primary: true\n      }, \"Contribute!\"));\n    }\n  }]);\n\n  return ContributeForm;\n}(Component);\n\nexport default ContributeForm;","map":{"version":3,"sources":["D:\\Blockchain\\Campaign\\components\\ContributeForm.js"],"names":["React","Component","Form","Input","Message","Button","Campaign","web3","ContributeForm","value","event","preventDefault","campaign","props","address","eth","getAccounts","accounts","methods","contribute","send","from","utils","toWei","state","onSubmit","setState","target"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,IAAR,EAAcC,KAAd,EAAqBC,OAArB,EAA8BC,MAA9B,QAA2C,mBAA3C;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;;IAEMC,c;;;;;;;;;;;;;;;;;;4DACM;AACJC,MAAAA,KAAK,EAAE;AADH,K;;;;;;;+BAGG,iBAAMC,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACPA,gBAAAA,KAAK,CAACC,cAAN;AACMC,gBAAAA,QAFC,GAEUN,QAAQ,CAAC,MAAKO,KAAL,CAAWC,OAAZ,CAFlB;AAAA;AAAA;AAAA,uBAKoBP,IAAI,CAACQ,GAAL,CAASC,WAAT,EALpB;;AAAA;AAKGC,gBAAAA,QALH;AAAA;AAAA,uBAMGL,QAAQ,CAACM,OAAT,CAAiBC,UAAjB,GAA8BC,IAA9B,CAAmC;AACrCC,kBAAAA,IAAI,EAAEJ,QAAQ,CAAC,CAAD,CADuB;AAErCR,kBAAAA,KAAK,EAAEF,IAAI,CAACe,KAAL,CAAWC,KAAX,CAAiB,MAAKC,KAAL,CAAWf,KAA5B,EAAmC,OAAnC;AAF8B,iBAAnC,CANH;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;6BAaF;AAAA;;AACL,aACI,oBAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,KAAKgB;AAArB,SACI,oBAAC,IAAD,CAAM,KAAN,QACA,0DADA,EAEA,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAC,OAAb;AAAqB,QAAA,aAAa,EAAC,OAAnC;AACI,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWf,KADtB;AAEI,QAAA,QAAQ,EAAE,kBAAAC,KAAK;AAAA,iBAAE,MAAI,CAACgB,QAAL,CAAc;AAACjB,YAAAA,KAAK,EAAEC,KAAK,CAACiB,MAAN,CAAalB;AAArB,WAAd,CAAF;AAAA;AAFnB,QAFA,CADJ,EAQI,oBAAC,MAAD;AAAQ,QAAA,OAAO;AAAf,uBARJ,CADJ;AAYH;;;;EA9BwBR,S;;AAiC7B,eAAeO,cAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport {Form, Input, Message, Button} from 'semantic-ui-react';\r\nimport Campaign from '../Ethereum/campaign';\r\nimport web3 from '../Ethereum/web3';\r\n\r\nclass ContributeForm extends Component {\r\n    state = {\r\n        value: ''\r\n    };\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n        const campaign = Campaign(this.props.address);\r\n\r\n        try {\r\n            const accounts = await web3.eth.getAccounts();\r\n            await campaign.methods.contribute().send({\r\n                from: accounts[0],\r\n                value: web3.utils.toWei(this.state.value, 'ether')                \r\n            });    \r\n        } catch(err) {}\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Form onSubmit={this.onSubmit}>\r\n                <Form.Field>\r\n                <label>Amount to Contribute</label>    \r\n                <Input label=\"ether\" labelPosition=\"right\" \r\n                    value={this.state.value}\r\n                    onChange={event=>this.setState({value: event.target.value})}\r\n                />\r\n                </Form.Field>   \r\n                <Button primary>Contribute!</Button>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ContributeForm;"]},"metadata":{},"sourceType":"module"}