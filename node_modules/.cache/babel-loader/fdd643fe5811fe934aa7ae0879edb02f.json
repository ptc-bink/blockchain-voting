{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _getIterator from \"@babel/runtime-corejs2/core-js/get-iterator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport { Grid, Table, Button, Form, Header, Icon, Menu, Modal, Sidebar, Container, Card } from 'semantic-ui-react';\nimport Layout from '../../components/Layout';\nimport Cookies from 'js-cookie';\nimport { Router } from '../../routes';\nimport web3 from '../../Ethereum/web3';\nimport Election from '../../Ethereum/election';\nimport ReqTable from '../../components/ReqTable';\n\nvar VotingList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(VotingList, _Component);\n\n  function VotingList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, VotingList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(VotingList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      election_address: Cookies.get('address'),\n      election_name: '',\n      election_description: '',\n      emailArr: [],\n      idArr: []\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"createTable\", function () {\n      var table = []; // Outer loop to create parent\n\n      for (var i = 0; i < 3; i++) {\n        var children = []; //Inner loop to create children\n\n        for (var j = 0; j < 5; j++) {\n          children.push(React.createElement(\"td\", null, \"Column \".concat(j + 1)));\n        } //Create the parent and add the children\n\n\n        table.push(React.createElement(\"tr\", null, children));\n      }\n\n      return table;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderTable\", function () {\n      if (_this.state.emailArr == null) return React.createElement(\"h1\", null, \"No voters defined. Please register the voters at your right.\");else {\n        console.log(_this.state.emailArr[0]);\n        console.log(_this.state.idArr[0]);\n        var table2 = [];\n        var table1 = [React.createElement(Table.Header, null, React.createElement(Table.HeaderCell, null, \"Sr. No.\"), React.createElement(Table.HeaderCell, null, \"E-mail ID: \"), React.createElement(Table.HeaderCell, null))];\n\n        for (var i = 0; i < ea2.length; i++) {\n          table2.push(React.createElement(\"div\", null, React.createElement(Table.Cell, {\n            collapsing: true\n          }, \"$\", i), React.createElement(Table.Cell, null, ea2[0]), React.createElement(Table.Cell, {\n            textAlign: \"center\",\n            style: {\n              width: '50%'\n            }\n          }, React.createElement(Modal, {\n            size: 'tiny',\n            trigger: React.createElement(Button, {\n              positive: true\n            }, \"Edit\"),\n            closeIcon: true\n          }, React.createElement(Modal.Header, null, \"Edit Email ID\"), React.createElement(\"center\", null, React.createElement(Modal.Content, null, React.createElement(Form.Input, {\n            icon: \"user\",\n            iconPosition: \"left\",\n            placeholder: \"Username\",\n            style: {\n              padding: 5,\n              textAlign: 'center'\n            }\n          }), React.createElement(\"br\", null), React.createElement(Button, {\n            icon: \"mail\",\n            color: \"black\",\n            padding: \"10\",\n            id: ia2[0],\n            style: {\n              marginBottom: '30px'\n            }\n          }, \"Update\")))), React.createElement(Button, {\n            negative: true,\n            id: ia2[0]\n          }, \"Delete\"))));\n          table1.push(React.createElement(Table.Row, {\n            children: table2\n          }));\n        }\n\n        console.log(table1);\n        return table1;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"GridExampleGrid\", function () {\n      return React.createElement(Grid, null, columns);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"SidebarExampleVisible\", function () {\n      return React.createElement(Sidebar.Pushable, null, React.createElement(Sidebar, {\n        as: Menu,\n        animation: \"overlay\",\n        icon: \"labeled\",\n        inverted: true,\n        vertical: true,\n        visible: true,\n        width: \"thin\",\n        style: {\n          backgroundColor: 'white',\n          borderWidth: \"10px\"\n        }\n      }, React.createElement(Menu.Item, {\n        as: \"a\",\n        style: {\n          color: 'grey'\n        }\n      }, React.createElement(\"h2\", null, \"MENU\"), React.createElement(\"hr\", null)), React.createElement(Menu.Item, {\n        as: \"a\",\n        style: {\n          color: 'grey'\n        }\n      }, React.createElement(Icon, {\n        name: \"dashboard\"\n      }), \"Dashboard\"), React.createElement(Menu.Item, {\n        as: \"a\",\n        style: {\n          color: 'grey'\n        }\n      }, React.createElement(Icon, {\n        name: \"user outline\"\n      }), \"Candidate List\"), React.createElement(Menu.Item, {\n        as: \"a\",\n        style: {\n          color: 'grey'\n        }\n      }, React.createElement(Icon, {\n        name: \"list\"\n      }), \"Voter List\"), React.createElement(Menu.Item, {\n        as: \"a\",\n        style: {\n          color: 'grey'\n        }\n      }, React.createElement(Icon, {\n        name: \"sign out\"\n      }), \"Sign Out\")));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"CardExampleGroupProps\", function () {\n      return React.createElement(Card.Group, null);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"register\", function (event) {\n      var email = document.getElementById('register_voter_email').value; //const election_address = 'abc'; //change to state variable\n\n      var http = new XMLHttpRequest();\n      var url = \"/voter/register\";\n      var params = \"email=\" + email + \"&election_address=\" + _this.state.election_address + \"&election_name=\" + _this.state.election_name + \"&election_description=\" + _this.state.election_description;\n      http.open(\"POST\", url, true); //Send the proper header information along with the request\n\n      http.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n\n      http.onreadystatechange = function () {\n        //Call a function when the state changes.\n        if (http.readyState == 4 && http.status == 200) {\n          var responseObj = JSON.parse(http.responseText);\n\n          if (responseObj.status == \"success\") {\n            alert(responseObj.message); //window.location(\"localhost:3000\");\n          } else {\n            alert(responseObj.message);\n          }\n        }\n      };\n\n      http.send(params);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mail_to_all\", function (event) {\n      //const election_address = 'abc'; //change to state variable\n      //const election_name = 'e_name';\n      //const election_description = 'e_desc';\n      var http = new XMLHttpRequest();\n      var url = \"voter/sendMail\";\n      var params = \"election_address=\" + _this.state.election_address + \"&election_name=\" + _this.state.election_name + \"&election_description=\" + _this.state.election_description;\n      http.open(\"POST\", url, true); //Send the proper header information along with the request\n\n      http.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n\n      http.onreadystatechange = function () {\n        //Call a function when the state changes.\n        if (http.readyState == 4 && http.status == 200) {\n          var responseObj = JSON.parse(http.responseText);\n\n          if (responseObj.status == \"success\") {\n            alert(responseObj.message); //window.location(\"localhost:3000\");\n          } else {\n            alert(responseObj.message);\n          }\n        }\n      };\n\n      http.send(params);\n    });\n\n    return _this;\n  }\n\n  _createClass(VotingList, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var http, url, email, id, add, election, summary;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                http = new XMLHttpRequest();\n                url = '/voter/';\n                http.open(\"GET\", url, true);\n                email = [];\n                id = []; //Send the proper header information along with the request\n\n                http.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n\n                http.onreadystatechange = function () {\n                  //Call a function when the state changes.\n                  if (http.readyState == 4 && http.status == 200) {\n                    var responseObj = JSON.parse(http.responseText);\n\n                    if (responseObj.status == \"success\") {\n                      var _iteratorNormalCompletion = true;\n                      var _didIteratorError = false;\n                      var _iteratorError = undefined;\n\n                      try {\n                        for (var _iterator = _getIterator(responseObj.data.voters), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                          var voter = _step.value;\n                          email.push(voter.email);\n                          id.push(voter.id);\n                        }\n                      } catch (err) {\n                        _didIteratorError = true;\n                        _iteratorError = err;\n                      } finally {\n                        try {\n                          if (!_iteratorNormalCompletion && _iterator.return != null) {\n                            _iterator.return();\n                          }\n                        } finally {\n                          if (_didIteratorError) {\n                            throw _iteratorError;\n                          }\n                        }\n                      }\n                    }\n                  }\n                };\n\n                http.send();\n                this.state.emailArr.push(email);\n                console.log(this.state.emailArr);\n                this.state.idArr.push(id);\n                _context.prev = 11;\n                add = Cookies.get('address');\n                election = Election(add);\n                _context.next = 16;\n                return election.methods.getElectionDetails().call();\n\n              case 16:\n                summary = _context.sent;\n                this.setState({\n                  election_name: summary[0],\n                  election_description: summary[1]\n                });\n                _context.next = 25;\n                break;\n\n              case 20:\n                _context.prev = 20;\n                _context.t0 = _context[\"catch\"](11);\n                console.log(_context.t0.message);\n                alert(\"Redirecting you to login page...\");\n                Router.pushRoute('/company_login');\n\n              case 25:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[11, 20]]);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"renderRows\",\n    value: function renderRows() {\n      return this.state;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var Body = Table.Body,\n          Row = Table.Row,\n          HeaderCell = Table.HeaderCell,\n          Header = Table.Header;\n      return React.createElement(\"div\", null, React.createElement(Grid, null, React.createElement(Grid.Row, null, React.createElement(Grid.Column, {\n        width: 2\n      }, this.SidebarExampleVisible()), React.createElement(Layout, null, React.createElement(\"br\", null), React.createElement(\"br\", null), React.createElement(Grid.Column, {\n        width: 14,\n        style: {\n          minHeight: '630px'\n        }\n      }, React.createElement(Grid.Column, {\n        style: {\n          float: 'left',\n          width: '60%'\n        }\n      }, React.createElement(Header, {\n        as: \"h2\",\n        color: \"black\"\n      }, \"Voter List\"), React.createElement(Container, null, React.createElement(Button, {\n        onClick: this.renderTable\n      }), React.createElement(Table, {\n        celled: true,\n        compact: true\n      }, React.createElement(Header, null, React.createElement(Row, null, React.createElement(HeaderCell, null, \"Sr. No. \"), React.createElement(HeaderCell, null, \"E-mail ID\"), React.createElement(HeaderCell, null))), React.createElement(Body, null)))), React.createElement(Grid.Column, {\n        style: {\n          float: 'right',\n          width: '30%'\n        }\n      }, React.createElement(Container, {\n        style: {}\n      }, React.createElement(Header, {\n        as: \"h2\",\n        color: \"black\"\n      }, \"Register Voter\"), React.createElement(Card, {\n        style: {\n          width: '100%'\n        }\n      }, React.createElement(\"br\", null), React.createElement(Form.Group, {\n        size: \"large\",\n        style: {\n          marginLeft: '15%',\n          marginRight: '15%'\n        }\n      }, React.createElement(Form.Input, {\n        style: {\n          marginTop: '10px'\n        },\n        fluid: true,\n        id: \"register_voter_email\",\n        label: \"Email:\",\n        placeholder: \"Enter your email.\",\n        textAlign: \"center\"\n      }), React.createElement(\"br\", null), React.createElement(\"br\", null), React.createElement(Button, {\n        primary: true,\n        style: {\n          Bottom: '10px',\n          marginBottom: '15px'\n        },\n        onClick: this.register\n      }, \"Register\"))))))))));\n    }\n  }]);\n\n  return VotingList;\n}(Component);\n\nexport default VotingList;","map":{"version":3,"sources":["D:\\Blockchain\\BlockChainVoting\\pages\\election\\voting_list.js"],"names":["React","Component","Grid","Table","Button","Form","Header","Icon","Menu","Modal","Sidebar","Container","Card","Layout","Cookies","Router","web3","Election","ReqTable","VotingList","election_address","get","election_name","election_description","emailArr","idArr","table","i","children","j","push","state","console","log","table2","table1","ea2","length","width","padding","textAlign","ia2","marginBottom","columns","backgroundColor","borderWidth","color","event","email","document","getElementById","value","http","XMLHttpRequest","url","params","open","setRequestHeader","onreadystatechange","readyState","status","responseObj","JSON","parse","responseText","alert","message","send","id","data","voters","voter","add","election","methods","getElectionDetails","call","summary","setState","pushRoute","Body","Row","HeaderCell","SidebarExampleVisible","minHeight","float","renderTable","marginLeft","marginRight","marginTop","Bottom","register"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Grid, Table, Button, Form, Header, Icon, Menu, Modal, Sidebar, Container, Card } from 'semantic-ui-react';\r\nimport Layout from '../../components/Layout';\r\nimport Cookies from 'js-cookie';\r\nimport {Router} from '../../routes';\r\nimport web3 from '../../Ethereum/web3';\r\nimport Election from '../../Ethereum/election';\r\nimport ReqTable from '../../components/ReqTable';\r\nclass VotingList extends Component { \r\n\r\n    state = {\r\n        election_address: Cookies.get('address'),\r\n        election_name: '',\r\n        election_description: '',\r\n        emailArr: [],\r\n        idArr: [] \r\n    }\r\n\r\n    async componentDidMount() {\r\n        var http = new XMLHttpRequest();\r\n        var url = '/voter/';        \r\n        http.open(\"GET\", url, true);\r\n        let email=[];\r\n        let id=[]\r\n        //Send the proper header information along with the request\r\n        http.setRequestHeader(\r\n            \"Content-type\",\r\n            \"application/x-www-form-urlencoded\"\r\n        );\r\n        http.onreadystatechange = function() {\r\n            //Call a function when the state changes.\r\n            if (http.readyState == 4 && http.status == 200) {\r\n                var responseObj = JSON.parse(http.responseText);\r\n                if(responseObj.status==\"success\") {\r\n                  for (let voter of responseObj.data.voters) {\r\n                        email.push(voter.email);\r\n                        id.push(voter.id);    \r\n                  } \r\n                }                \r\n            }\r\n        };\r\n        http.send();\r\n        this.state.emailArr.push(email);\r\n        console.log(this.state.emailArr);\r\n        this.state.idArr.push(id);\r\n\r\n        try {\r\n            const add = Cookies.get('address');\r\n            const election = Election(add);\r\n            const summary = await election.methods.getElectionDetails().call();\r\n            this.setState({\r\n                election_name: summary[0],\r\n                election_description: summary[1]\r\n            });\r\n\r\n        } catch(err) {\r\n            console.log(err.message);\r\n            alert(\"Redirecting you to login page...\");\r\n            Router.pushRoute('/company_login');\r\n        }\r\n    }\r\n\r\n    createTable = () => {\r\n        let table = []\r\n    \r\n        // Outer loop to create parent\r\n        for (let i = 0; i < 3; i++) {\r\n          let children = []\r\n          //Inner loop to create children\r\n          for (let j = 0; j < 5; j++) {\r\n            children.push(<td>{`Column ${j + 1}`}</td>)\r\n          }\r\n          //Create the parent and add the children\r\n          table.push(<tr>{children}</tr>)\r\n        }\r\n        return table\r\n      }\r\n    \r\n\r\n    renderTable = () => {\r\n        if(this.state.emailArr == null) \r\n            return (<h1>No voters defined. Please register the voters at your right.</h1>)\r\n        else {             \r\n            console.log(this.state.emailArr[0]);\r\n            console.log(this.state.idArr[0]);\r\n            let table2 = []\r\n            let table1 = [\r\n                <Table.Header>\r\n                    <Table.HeaderCell>Sr. No.</Table.HeaderCell>\r\n                    <Table.HeaderCell>E-mail ID: </Table.HeaderCell>\r\n                    <Table.HeaderCell/>\r\n                </Table.Header>                   \r\n            ];       \r\n            for(let i=0; i<ea2.length; i++)\r\n            {               \r\n                table2.push(\r\n                    <div>\r\n                    <Table.Cell collapsing>${i}</Table.Cell>\r\n                    <Table.Cell>{ea2[0]}</Table.Cell>\r\n                    <Table.Cell textAlign='center' style={{ width: '50%' }}>                            \r\n                        <Modal size={'tiny'} trigger={<Button positive>Edit</Button>} closeIcon>\r\n                          <Modal.Header>Edit Email ID</Modal.Header> \r\n                          <center>\r\n                            <Modal.Content>\r\n                              <Form.Input icon='user' iconPosition='left' placeholder='Username' style={{ padding: 5, textAlign: 'center' }} />\r\n                              <br />\r\n                              <Button icon='mail' color=\"black\" padding=\"10\" id={ia2[0]} style={{ marginBottom: '30px' }}>Update</Button>\r\n                            </Modal.Content>\r\n                          </center>\r\n                        </Modal>\r\n                        <Button negative id={ia2[0]}>Delete</Button>\r\n                    </Table.Cell>\r\n                    </div>\r\n                );\r\n                table1.push(<Table.Row children={table2}/>);\r\n            }\r\n                    console.log(table1);\r\n            return (table1);\r\n        }\r\n    } \r\n\r\n  GridExampleGrid = () => <Grid>{columns}</Grid>\r\n  SidebarExampleVisible = () => (\r\n\r\n    <Sidebar.Pushable>\r\n      <Sidebar as={Menu} animation='overlay' icon='labeled' inverted vertical visible width='thin' style={{ backgroundColor: 'white', borderWidth: \"10px\" }}>\r\n        <Menu.Item as='a' style={{ color: 'grey' }} >\r\n          <h2>MENU</h2><hr />\r\n        </Menu.Item>\r\n        <Menu.Item as='a' style={{ color: 'grey' }} >\r\n          <Icon name='dashboard' />\r\n          Dashboard\r\n          </Menu.Item>\r\n        <Menu.Item as='a' style={{ color: 'grey' }}>\r\n          <Icon name='user outline' />\r\n          Candidate List\r\n          </Menu.Item>\r\n        <Menu.Item as='a' style={{ color: 'grey' }}>\r\n          <Icon name='list' />\r\n          Voter List\r\n          </Menu.Item>\r\n        <Menu.Item as='a' style={{ color: 'grey' }}>\r\n          <Icon name='sign out' />\r\n          Sign Out\r\n          </Menu.Item>\r\n\r\n      </Sidebar>\r\n    </Sidebar.Pushable>\r\n  )\r\n  CardExampleGroupProps = () => (<Card.Group >\r\n\r\n  </Card.Group>)\r\n\r\n    register = event => {\r\n\r\n\t\tconst email = document.getElementById('register_voter_email').value;\r\n    //const election_address = 'abc'; //change to state variable\r\n    \r\n\t\tvar http = new XMLHttpRequest();\r\n        var url = \"/voter/register\";\r\n        var params = \"email=\" + email+\"&election_address=\" + this.state.election_address+ \"&election_name=\" + this.state.election_name + \"&election_description=\" + this.state.election_description;\r\n        http.open(\"POST\", url, true);\r\n        //Send the proper header information along with the request\r\n        http.setRequestHeader(\r\n            \"Content-type\",\r\n            \"application/x-www-form-urlencoded\"\r\n        );\r\n        http.onreadystatechange = function() {\r\n            //Call a function when the state changes.\r\n            if (http.readyState == 4 && http.status == 200) {\r\n                var responseObj = JSON.parse(http.responseText);\r\n                if(responseObj.status==\"success\") {\r\n                  alert(responseObj.message);\r\n                  //window.location(\"localhost:3000\");\r\n                }\r\n                else {\r\n                  alert(responseObj.message);\r\n                }\r\n            }\r\n        };\r\n    \thttp.send(params);\r\n\t}\r\n\t\r\n\tmail_to_all = event => {\r\n\t\t//const election_address = 'abc'; //change to state variable\r\n\t\t//const election_name = 'e_name';\r\n\t\t//const election_description = 'e_desc';\r\n\t\tvar http = new XMLHttpRequest();\r\n        var url = \"voter/sendMail\";\r\n        var params = \"election_address=\" + this.state.election_address + \"&election_name=\" + this.state.election_name + \"&election_description=\" + this.state.election_description;\r\n        http.open(\"POST\", url, true);\r\n        //Send the proper header information along with the request\r\n        http.setRequestHeader(\r\n            \"Content-type\",\r\n            \"application/x-www-form-urlencoded\"\r\n        );\r\n        http.onreadystatechange = function() {\r\n            //Call a function when the state changes.\r\n            if (http.readyState == 4 && http.status == 200) {\r\n                var responseObj = JSON.parse(http.responseText);\r\n                if(responseObj.status==\"success\") {\r\n                  alert(responseObj.message);\r\n                  //window.location(\"localhost:3000\");\r\n                }\r\n                else {\r\n                  alert(responseObj.message);\r\n                }\r\n            }\r\n        };\r\n    \thttp.send(params);\r\n\t}\r\n\r\n  renderRows() {\r\n      return(\r\n          this.state\r\n      )\r\n  }\r\n\r\n  render() {\r\n      const {Body, Row, HeaderCell, Header} = Table;\r\n    return (\r\n      <div>\r\n        <Grid>\r\n          <Grid.Row>\r\n            <Grid.Column width={2}>\r\n              {this.SidebarExampleVisible()}\r\n            </Grid.Column>\r\n            <Layout>                      \r\n              <br />\r\n              <br />\r\n              <Grid.Column width={14} style={{ minHeight: '630px' }}>\r\n                <Grid.Column style={{ float: 'left', width: '60%' }}>\r\n                  <Header as='h2' color='black'>\r\n                    Voter List\r\n              </Header>\r\n                  <Container>\r\n                      <Button onClick={this.renderTable} ></Button>\r\n                      <Table celled compact>\r\n                        <Header>\r\n                            <Row>\r\n                                <HeaderCell>Sr. No. </HeaderCell>\r\n                                <HeaderCell>E-mail ID</HeaderCell>                                \r\n                                <HeaderCell/>\r\n                            </Row>\r\n                        </Header>\r\n                        <Body>                        \r\n                        </Body>\r\n                      </Table>\r\n                  </Container>\r\n                </Grid.Column>\r\n                <Grid.Column style={{ float: 'right', width: '30%' }}>\r\n                  <Container style={{}}>\r\n                    <Header as='h2' color='black'>\r\n                      Register Voter\r\n                       </Header>\r\n                    <Card style={{ width: '100%' }}>\r\n                      <br/>\r\n                      <Form.Group size='large' style={{ marginLeft: '15%', marginRight: '15%' }} >\r\n                        <Form.Input\r\n\t\t\t\t\t\tstyle={{marginTop: '10px'}}\r\n                          fluid\r\n                          id='register_voter_email'\r\n                          label='Email:'\r\n                          placeholder='Enter your email.'\r\n                          textAlign='center'\r\n                        />\r\n\r\n                        <br /><br />\r\n                        <Button primary style={{ Bottom: '10px', marginBottom: '15px' }} onClick={this.register}>Register</Button>\r\n                      </Form.Group>\r\n                    </Card>\r\n                  </Container>\r\n                </Grid.Column>                \r\n              </Grid.Column>\r\n            </Layout>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default VotingList"]},"metadata":{},"sourceType":"module"}