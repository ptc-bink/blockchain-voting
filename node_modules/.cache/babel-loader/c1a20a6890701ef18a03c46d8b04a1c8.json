{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport { Grid, Table, Button, Form, Image, Input, Header, Icon, Menu, Modal, Sidebar, Container, Card } from 'semantic-ui-react';\nimport Layout from '../../components/Layout';\nimport web3 from '../../Ethereum/web3';\nimport Cookies from 'js-cookie';\nimport { Router } from '../../routes';\nimport Election from '../../Ethereum/election';\nimport ipfs from '../../ipfs';\n\nvar VotingList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(VotingList, _Component);\n\n  function VotingList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, VotingList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(VotingList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      election_address: Cookies.get('address'),\n      election_name: '',\n      election_description: '',\n      candidates: [],\n      cand_name: '',\n      cand_desc: '',\n      buffer: '',\n      ipfsHash: null,\n      loading: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getElectionDetails\", function () {\n      var _this$state = _this.state,\n          election_name = _this$state.election_name,\n          election_description = _this$state.election_description;\n      return React.createElement(\"div\", {\n        style: {\n          marginLeft: '45%',\n          marginBottom: '2%',\n          marginTop: '2%'\n        }\n      }, React.createElement(Header, {\n        as: \"h2\"\n      }, React.createElement(Icon, {\n        name: \"address card\"\n      }), React.createElement(Header.Content, null, election_name, React.createElement(Header.Subheader, null, election_description))));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderTable\", function () {\n      return React.createElement(Card.Group, {\n        items: _this.state.item\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"captureFile\", function (event) {\n      event.stopPropagation();\n      event.preventDefault();\n      var file = event.target.files[0];\n      var reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = function () {\n        return _this.convertToBuffer(reader);\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"convertToBuffer\",\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(reader) {\n        var buffer;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return Buffer.from(reader.result);\n\n              case 2:\n                buffer = _context.sent;\n\n                //set this buffer -using es6 syntax\n                _this.setState({\n                  buffer: buffer\n                });\n\n                console.log(buffer);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\",\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(event) {\n        var accounts, email, http, url, params;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                //event.preventDefault();\n                _this.setState({\n                  loading: true\n                });\n\n                _context2.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context2.sent;\n                _context2.prev = 4;\n                _context2.next = 7;\n                return ipfs.add(_this.state.buffer, function (err, ipfsHash) {\n                  console.log(err, ipfsHash);\n\n                  _this.setState({\n                    ipfsHash: ipfsHash[0].hash\n                  });\n\n                  console.log(_this.state.ipfsHash);\n                  var add = Cookies.get('address');\n                  var election = Election(add);\n                  election.methods.addCandidate(_this.state.cand_name, _this.state.cand_desc, _this.state.ipfsHash, document.getElementById('email').value).send({\n                    from: accounts[0]\n                  }, function (error, transactionHash) {});\n                });\n\n              case 7:\n                alert(\"Added!\");\n                _context2.next = 13;\n                break;\n\n              case 10:\n                _context2.prev = 10;\n                _context2.t0 = _context2[\"catch\"](4);\n                alert(\"Error in file processing.\");\n\n              case 13:\n                //ajax script below\n                email = document.getElementById('email').value;\n                http = new XMLHttpRequest();\n                url = \"/candidate/registerCandidate\";\n                params = \"email=\" + email + \"&election_name=\" + _this.state.election_name;\n                http.open(\"POST\", url, true); //Send the proper header information along with the request\n\n                http.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n\n                http.onreadystatechange = function () {\n                  //Call a function when the state changes.\n                  if (http.readyState == 4 && http.status == 200) {\n                    var responseObj = JSON.parse(http.responseText);\n\n                    if (responseObj.status == \"success\") {\n                      alert(responseObj.message); //window.location(\"localhost:3000\");\n                    } else {\n                      alert(responseObj.message);\n                    }\n                  }\n                };\n\n                http.send(params);\n\n                _this.setState({\n                  loading: false\n                });\n\n              case 22:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[4, 10]]);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"GridExampleGrid\", function () {\n      return React.createElement(Grid, null, columns);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"SidebarExampleVisible\", function () {\n      return React.createElement(Sidebar.Pushable, null, React.createElement(Sidebar, {\n        as: Menu,\n        animation: \"overlay\",\n        icon: \"labeled\",\n        inverted: true,\n        vertical: true,\n        visible: true,\n        width: \"thin\",\n        style: {\n          backgroundColor: 'white',\n          borderWidth: \"10px\"\n        }\n      }, React.createElement(Menu.Item, {\n        as: \"a\",\n        style: {\n          color: 'grey'\n        }\n      }, React.createElement(\"h2\", null, \"MENU\"), React.createElement(\"hr\", null)), React.createElement(Menu.Item, {\n        as: \"a\",\n        style: {\n          color: 'grey'\n        }\n      }, React.createElement(Icon, {\n        name: \"dashboard\"\n      }), \"Dashboard\"), React.createElement(Menu.Item, {\n        as: \"a\",\n        style: {\n          color: 'grey'\n        }\n      }, React.createElement(Icon, {\n        name: \"user outline\"\n      }), \"Candidate List\"), React.createElement(Menu.Item, {\n        as: \"a\",\n        style: {\n          color: 'grey'\n        }\n      }, React.createElement(Icon, {\n        name: \"list\"\n      }), \"Voter List\"), React.createElement(Menu.Item, {\n        as: \"a\",\n        style: {\n          color: 'grey'\n        }\n      }, React.createElement(Icon, {\n        name: \"sign out\"\n      }), \"Sign Out\")));\n    });\n\n    return _this;\n  }\n\n  _createClass(VotingList, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var add, election, summary, c, candidates, _i, i, items;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                add = Cookies.get('address');\n                election = Election(add);\n                _context3.next = 5;\n                return election.methods.getElectionDetails().call();\n\n              case 5:\n                summary = _context3.sent;\n                this.setState({\n                  election_name: summary[0],\n                  election_description: summary[1]\n                });\n                _context3.next = 9;\n                return election.methods.getNumOfCandidates.call();\n\n              case 9:\n                c = _context3.sent;\n                console.log(\"NumCand: \" + c);\n                candidates = [];\n                _i = 0;\n\n              case 13:\n                if (!(_i < c)) {\n                  _context3.next = 22;\n                  break;\n                }\n\n                _context3.t0 = candidates;\n                _context3.next = 17;\n                return election.methods.getCandidate(_i).call();\n\n              case 17:\n                _context3.t1 = _context3.sent;\n\n                _context3.t0.push.call(_context3.t0, _context3.t1);\n\n              case 19:\n                _i++;\n                _context3.next = 13;\n                break;\n\n              case 22:\n                i = -1;\n                items = candidates.map(function (candidate) {\n                  i++;\n                  return {\n                    header: candidate[0],\n                    description: candidate[1],\n                    image: React.createElement(Image, {\n                      id: i,\n                      src: \"https://ipfs.io/ipfs/\".concat(candidate[2]),\n                      size: \"medium\"\n                    }),\n                    extra: React.createElement(\"div\", null, React.createElement(Icon, {\n                      name: \"pie graph\",\n                      iconPostion: \"left\"\n                    }), candidate[3].toString())\n                  };\n                });\n                this.setState({\n                  item: items\n                });\n                _context3.next = 32;\n                break;\n\n              case 27:\n                _context3.prev = 27;\n                _context3.t2 = _context3[\"catch\"](0);\n                console.log(_context3.t2.message);\n                alert(\"Redirecting you to login page...\");\n                Router.pushRoute('/company_login');\n\n              case 32:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 27]]);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var Body = Table.Body,\n          Row = Table.Row,\n          HeaderCell = Table.HeaderCell,\n          Header = Table.Header;\n      return React.createElement(\"div\", null, React.createElement(Grid, null, React.createElement(Grid.Row, null, React.createElement(Grid.Column, {\n        width: 2\n      }, this.SidebarExampleVisible()), React.createElement(Layout, null, this.getElectionDetails(), React.createElement(\"br\", null), React.createElement(\"br\", null), React.createElement(Grid.Column, {\n        width: 14,\n        style: {\n          minHeight: '630px'\n        }\n      }, React.createElement(Grid.Column, {\n        style: {\n          float: 'left',\n          width: '60%'\n        }\n      }, React.createElement(Header, {\n        as: \"h2\",\n        color: \"black\"\n      }, \"Candidate List\"), React.createElement(Container, null, React.createElement(\"table\", null, this.renderTable()))), React.createElement(Grid.Column, {\n        style: {\n          float: 'right',\n          width: '30%'\n        }\n      }, React.createElement(Container, {\n        style: {\n          marginLeft: '50px'\n        }\n      }, React.createElement(Header, {\n        as: \"h2\",\n        color: \"black\",\n        textAlign: \"center\"\n      }, \"Add Candidate\"), React.createElement(Card, {\n        style: {\n          width: '100%'\n        }\n      }, React.createElement(Form.Group, {\n        size: \"large\",\n        style: {\n          marginLeft: '15%',\n          marginRight: '15%'\n        }\n      }, React.createElement(\"br\", null), React.createElement(Form.Input, {\n        fluid: true,\n        label: \"Name:\",\n        placeholder: \"Enter your name.\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            cand_name: event.target.value\n          });\n        },\n        textAlign: \"center\"\n      }), React.createElement(\"p\", null, \"Image:\"), React.createElement(\"div\", {\n        class: \"ui fluid\",\n        style: {\n          borderWidth: '0px',\n          marginRight: '20%'\n        }\n      }, React.createElement(\"input\", {\n        type: \"file\",\n        class: \"inputfile\",\n        id: \"embedpollfileinput\",\n        onChange: this.captureFile,\n        style: {\n          maxWidth: '0.1px',\n          maxHeight: '0.1px',\n          zIndex: '-1',\n          overflow: 'hidden',\n          position: 'absolute'\n        }\n      }), React.createElement(\"label\", {\n        for: \"embedpollfileinput\",\n        class: \"ui huge blue right floated button\",\n        style: {\n          fontSize: '15px',\n          marginRight: '30%'\n        }\n      }, React.createElement(\"i\", {\n        class: \"ui upload icon\"\n      }), \"Upload image\")), React.createElement(\"br\", null), React.createElement(\"br\", null), React.createElement(\"br\", null), React.createElement(\"p\", null, \"Description:\"), React.createElement(Form.Input, {\n        as: \"TextArea\",\n        fluid: true,\n        label: \"Description:\",\n        placeholder: \"Describe here.\",\n        style: {\n          width: '100%'\n        },\n        centered: true,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            cand_desc: event.target.value\n          });\n        }\n      }), React.createElement(\"br\", null), React.createElement(\"br\", null), React.createElement(\"p\", null, \"E-mail ID: \"), React.createElement(Form.Input, {\n        fluid: true,\n        id: \"email\",\n        placeholder: \"Enter your e-mail\"\n      }), React.createElement(\"br\", null), React.createElement(Button, {\n        primary: true,\n        onClick: this.onSubmit,\n        loading: this.state.loading,\n        style: {\n          Bottom: '10px',\n          marginBottom: '10px'\n        }\n      }, \"Register\"))))))))));\n    }\n  }]);\n\n  return VotingList;\n}(Component);\n\nexport default VotingList;","map":{"version":3,"sources":["D:\\Blockchain\\BlockChainVoting\\pages\\election\\candidate_list.js"],"names":["React","Component","Grid","Table","Button","Form","Image","Input","Header","Icon","Menu","Modal","Sidebar","Container","Card","Layout","web3","Cookies","Router","Election","ipfs","VotingList","election_address","get","election_name","election_description","candidates","cand_name","cand_desc","buffer","ipfsHash","loading","state","marginLeft","marginBottom","marginTop","item","event","stopPropagation","preventDefault","file","target","files","reader","window","FileReader","readAsArrayBuffer","onloadend","convertToBuffer","Buffer","from","result","setState","console","log","eth","getAccounts","accounts","add","err","hash","election","methods","addCandidate","document","getElementById","value","send","error","transactionHash","alert","email","http","XMLHttpRequest","url","params","open","setRequestHeader","onreadystatechange","readyState","status","responseObj","JSON","parse","responseText","message","columns","backgroundColor","borderWidth","color","getElectionDetails","call","summary","getNumOfCandidates","c","i","getCandidate","push","items","map","candidate","header","description","image","extra","toString","pushRoute","Body","Row","HeaderCell","SidebarExampleVisible","minHeight","float","width","renderTable","marginRight","captureFile","maxWidth","maxHeight","zIndex","overflow","position","fontSize","onSubmit","Bottom"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Grid, Table, Button, Form, Image, Input,Header, Icon, Menu, Modal, Sidebar, Container, Card } from 'semantic-ui-react';\r\nimport Layout from '../../components/Layout';\r\nimport web3 from '../../Ethereum/web3';\r\nimport Cookies from 'js-cookie';\r\nimport {Router} from '../../routes';\r\nimport Election from '../../Ethereum/election';\r\nimport ipfs from '../../ipfs';\r\nclass VotingList extends Component { \r\n\r\n    state = {\r\n        election_address: Cookies.get('address'),\r\n        election_name: '',\r\n        election_description: '',\r\n        candidates: [],\r\n        cand_name: '',\r\n        cand_desc: '',\r\n        buffer: '',\r\n        ipfsHash: null,\r\n        loading: false\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const add = Cookies.get('address');\r\n            const election = Election(add);\r\n            const summary = await election.methods.getElectionDetails().call();\r\n            this.setState({\r\n                election_name: summary[0],\r\n                election_description: summary[1]\r\n            });            \r\n            const c = await election.methods.getNumOfCandidates.call();\r\n            console.log(\"NumCand: \"+c);\r\n            \r\n            let candidates = [];\r\n            for(let i=0 ; i<c; i++) {\r\n                candidates.push(await election.methods.getCandidate(i).call());\r\n            }\r\n        let i=-1;\r\n        const items = candidates.map(candidate => {\r\n            i++;\r\n            return {\r\n              header: candidate[0],\r\n              description: candidate[1],\r\n              image: (\r\n                  <Image id={i} src={`https://ipfs.io/ipfs/${candidate[2]}`} size='medium'/>\r\n                ),\r\n              extra: (\r\n                  <div>\r\n                    <Icon name='pie graph' iconPostion='left'/>  \r\n                    {candidate[3].toString()}  \r\n                </div>\r\n              ) \r\n            };\r\n            \r\n        });\r\n        this.setState({item: items}); \r\n        } catch(err) {\r\n            console.log(err.message);\r\n            alert(\"Redirecting you to login page...\");\r\n            Router.pushRoute('/company_login');\r\n        }\r\n    }\r\n    getElectionDetails = () => {\r\n        const {\r\n            election_name,\r\n            election_description\r\n        } = this.state;\r\n    \r\n        return (\r\n          <div style={{marginLeft: '45%',marginBottom: '2%',marginTop: '2%'}}>\r\n            <Header as=\"h2\">\r\n              <Icon name=\"address card\" />\r\n              <Header.Content>\r\n                {election_name}\r\n                <Header.Subheader>{election_description}</Header.Subheader>\r\n              </Header.Content>\r\n            </Header>\r\n          </div>\r\n        );\r\n      }\r\n\r\n    renderTable = () => {\r\n        return (<Card.Group items={this.state.item}/>)\r\n    } \r\n\r\n    captureFile = (event) => {\r\n        event.stopPropagation()\r\n        event.preventDefault()\r\n        const file = event.target.files[0]\r\n        let reader = new window.FileReader()\r\n        reader.readAsArrayBuffer(file)\r\n        reader.onloadend = () => this.convertToBuffer(reader)\r\n    };\r\n    \r\n    convertToBuffer = async(reader) => {\r\n        //file is converted to a buffer for upload to IPFS\r\n        const buffer = await Buffer.from(reader.result);\r\n        //set this buffer -using es6 syntax\r\n        this.setState({buffer});\r\n        console.log(buffer);\r\n    };\r\n    \r\n    onSubmit = async (event) => {\r\n        //event.preventDefault();\r\n        this.setState({loading: true});\r\n        const accounts = await web3.eth.getAccounts();\r\n        /* console.log(accounts[0]);\r\n        console.log(document.getElementById('email').value);\r\n        console.log(this.state.cand_desc);\r\n        console.log(this.state.cand_name);\r\n        \r\n        console.log(this.state.election_address); */\r\n        try {\r\n        await ipfs.add(this.state.buffer, (err, ipfsHash) => {\r\n            console.log(err,ipfsHash);\r\n            \r\n            this.setState({ ipfsHash: ipfsHash[0].hash });\r\n\r\n            console.log(this.state.ipfsHash);\r\n                    \r\n            const add = Cookies.get('address');\r\n            const election = Election(add);\r\n\r\n            election.methods.addCandidate(this.state.cand_name,this.state.cand_desc,this.state.ipfsHash,document.getElementById('email').value).send({\r\n                from: accounts[0]}, (error, transactionHash) => {}\r\n            );       \r\n        })\r\n            alert(\"Added!\");\r\n        } catch (err) {\r\n            alert(\"Error in file processing.\");\r\n        }\r\n        //ajax script below\r\n        const email = document.getElementById('email').value;\r\n            var http = new XMLHttpRequest();\r\n            var url = \"/candidate/registerCandidate\";\r\n            var params = \"email=\" + email+ \"&election_name=\" + this.state.election_name;\r\n            http.open(\"POST\", url, true);\r\n            //Send the proper header information along with the request\r\n            http.setRequestHeader(\r\n                \"Content-type\",\r\n                \"application/x-www-form-urlencoded\"\r\n            );\r\n            http.onreadystatechange = function() {\r\n                //Call a function when the state changes.\r\n                if (http.readyState == 4 && http.status == 200) {\r\n                    var responseObj = JSON.parse(http.responseText);\r\n                    if(responseObj.status==\"success\") {\r\n                      alert(responseObj.message);\r\n                      //window.location(\"localhost:3000\");\r\n                    }\r\n                    else {\r\n                      alert(responseObj.message);\r\n                    }\r\n                }\r\n            };\r\n            http.send(params);\r\n            this.setState({loading: false});\r\n    };\r\n    \r\n\r\n  GridExampleGrid = () => <Grid>{columns}</Grid>\r\n  SidebarExampleVisible = () => (\r\n\r\n    <Sidebar.Pushable>\r\n      <Sidebar as={Menu} animation='overlay' icon='labeled' inverted vertical visible width='thin' style={{ backgroundColor: 'white', borderWidth: \"10px\" }}>\r\n        <Menu.Item as='a' style={{ color: 'grey' }} >\r\n          <h2>MENU</h2><hr />\r\n        </Menu.Item>\r\n        <Menu.Item as='a' style={{ color: 'grey' }} >\r\n          <Icon name='dashboard' />\r\n          Dashboard\r\n          </Menu.Item>\r\n        <Menu.Item as='a' style={{ color: 'grey' }}>\r\n          <Icon name='user outline' />\r\n          Candidate List\r\n          </Menu.Item>\r\n        <Menu.Item as='a' style={{ color: 'grey' }}>\r\n          <Icon name='list' />\r\n          Voter List\r\n          </Menu.Item>\r\n        <Menu.Item as='a' style={{ color: 'grey' }}>\r\n          <Icon name='sign out' />\r\n          Sign Out\r\n          </Menu.Item>\r\n\r\n      </Sidebar>\r\n    </Sidebar.Pushable>\r\n  )\r\n\r\n  render() {\r\n      const {Body, Row, HeaderCell, Header} = Table;\r\n    return (\r\n      <div>\r\n        <Grid>\r\n          <Grid.Row>\r\n            <Grid.Column width={2}>\r\n              {this.SidebarExampleVisible()}\r\n            </Grid.Column>\r\n            <Layout>\r\n                {this.getElectionDetails()}                      \r\n              <br />\r\n              <br />\r\n              <Grid.Column width={14} style={{ minHeight: '630px' }}>\r\n                <Grid.Column style={{ float: 'left', width: '60%' }}>\r\n                  <Header as='h2' color='black'>\r\n                    Candidate List\r\n              </Header>\r\n                  <Container>                      \r\n                      <table>\r\n                      {this.renderTable()}\r\n                      </table>                                        \r\n                  </Container>\r\n                </Grid.Column>\r\n                <Grid.Column style={{ float: 'right', width: '30%' }}>\r\n                <Container style={{marginLeft:'50px'}}>                      \r\n                <Header as='h2' color='black' textAlign='center'>                 \r\n                        Add Candidate\r\n                       </Header>\r\n                       <Card style={{width: '100%'}}>      \r\n                       \r\n                       <Form.Group size='large'style={{marginLeft: '15%',marginRight: '15%'}} >                       \r\n                       <br/>\r\n                       <Form.Input\r\n                        fluid\r\n                        label='Name:'\r\n                        placeholder='Enter your name.'\r\n                        onChange={event => this.setState({ cand_name: event.target.value })}\r\n                        textAlign='center'\r\n                       \r\n                    />        \r\n                        \r\n                        <p>Image:</p>\r\n                       \r\n                        \r\n                        <div class=\"ui fluid\" style={{ borderWidth: '0px', marginRight: '20%' }}>\r\n                          <input type=\"file\" class=\"inputfile\" id=\"embedpollfileinput\"                           \r\n                            onChange={this.captureFile}\r\n                            style={{ maxWidth: '0.1px', maxHeight: '0.1px', zIndex: '-1', overflow: 'hidden', position: 'absolute' }} \r\n                          />\r\n                          <label for=\"embedpollfileinput\" class=\"ui huge blue right floated button\" style={{ fontSize: '15px', marginRight: '30%' }}>\r\n                            <i class=\"ui upload icon\"></i>\r\n                            Upload image\r\n                          </label>\r\n                        </div><br /><br /><br />\r\n                        <p>Description:</p>\r\n                        <Form.Input as='TextArea'\r\n                         fluid\r\n                         label='Description:'                         \r\n                         placeholder='Describe here.'\r\n                         style={{width: '100%'}}\r\n                         centered={true}\r\n                         onChange={event => this.setState({ cand_desc: event.target.value })}\r\n                          />\r\n                       <br/><br/>\r\n                       <p>E-mail ID: </p>\r\n                       <Form.Input fluid\r\n                         id=\"email\"\r\n                         placeholder=\"Enter your e-mail\"\r\n                       />\r\n                       <br/>\r\n                       <Button primary onClick={this.onSubmit} loading={this.state.loading} style={{Bottom: '10px',marginBottom: '10px'}}>Register</Button>\r\n                        </Form.Group>                                  \r\n                      </Card> \r\n                    </Container>\r\n                </Grid.Column>                \r\n              </Grid.Column>\r\n            </Layout>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default VotingList"]},"metadata":{},"sourceType":"module"}