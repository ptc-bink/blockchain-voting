{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport { Grid, Button, Form, Header, Icon, Menu, Sidebar, Container, Card } from 'semantic-ui-react';\nimport Layout from '../../components/Layout';\nimport web3 from '../../Ethereum/web3';\nimport Election from '../../Ethereum/election';\nimport ipfs from '../../ipfs';\nimport Cookies from 'js-cookie';\nimport { Router } from '../../routes';\n\nvar VotingList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(VotingList, _Component);\n\n  function VotingList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, VotingList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(VotingList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      buffer: '',\n      ipfsHash: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"captureFile\", function (event) {\n      event.stopPropagation();\n      event.preventDefault();\n      var file = event.target.files[0];\n      var reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = function () {\n        return _this.convertToBuffer(reader);\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"convertToBuffer\",\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(reader) {\n        var buffer;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return Buffer.from(reader.result);\n\n              case 2:\n                buffer = _context.sent;\n\n                //set this buffer -using es6 syntax\n                _this.setState({\n                  buffer: buffer\n                });\n\n                console.log(buffer);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\",\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(event) {\n        var accounts;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                event.preventDefault();\n                console.log(\"web3 value is \", web3.eth.getAccounts());\n                _context2.next = 4;\n                return web3.eth.getAccounts();\n\n              case 4:\n                accounts = _context2.sent;\n                console.log('Sending from Metamask account: ', accounts[0]);\n                _context2.next = 8;\n                return ipfs.add(_this.state.buffer, function (err, ipfsHash) {\n                  console.log(err, ipfsHash);\n\n                  _this.setState({\n                    ipfsHash: ipfsHash[0].hash\n                  });\n\n                  election.methods.addCandidate(cand_name, cand_desc, _this.state.ipfsHash).send({\n                    from: accounts[0]\n                  }, function (error, transactionHash) {});\n                });\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"GridExampleGrid\", function () {\n      return React.createElement(Grid, null, columns);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"SidebarExampleVisible\", function () {\n      return React.createElement(Sidebar.Pushable, null, React.createElement(Sidebar, {\n        as: Menu,\n        animation: \"overlay\",\n        icon: \"labeled\",\n        inverted: true,\n        vertical: true,\n        visible: true,\n        width: \"thin\",\n        style: {\n          backgroundColor: 'white',\n          borderWidth: \"10px\"\n        }\n      }, React.createElement(Menu.Item, {\n        as: \"a\",\n        style: {\n          color: 'grey'\n        }\n      }, React.createElement(\"h2\", null, \"MENU\"), React.createElement(\"hr\", null)), React.createElement(Menu.Item, {\n        as: \"a\",\n        style: {\n          color: 'grey'\n        }\n      }, React.createElement(Icon, {\n        name: \"dashboard\"\n      }), \"Dashboard\"), React.createElement(Menu.Item, {\n        as: \"a\",\n        style: {\n          color: 'grey'\n        }\n      }, React.createElement(Icon, {\n        name: \"user outline\"\n      }), \"Candidate List\"), React.createElement(Menu.Item, {\n        as: \"a\",\n        style: {\n          color: 'grey'\n        }\n      }, React.createElement(Icon, {\n        name: \"list\"\n      }), \"Voter List\"), React.createElement(Menu.Item, {\n        as: \"a\",\n        style: {\n          color: 'grey'\n        }\n      }, React.createElement(Icon, {\n        name: \"sign out\"\n      }), \"Sign Out\")));\n    });\n\n    return _this;\n  }\n\n  _createClass(VotingList, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                try {} catch (err) {\n                  console.log(err.message);\n                  alert(\"Redirecting you to login page!\");\n                  Router.pushRoute();\n                }\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", null, React.createElement(Grid, null, React.createElement(Grid.Row, null, React.createElement(Grid.Column, {\n        width: 2\n      }, this.SidebarExampleVisible()), React.createElement(Layout, null, React.createElement(Grid.Column, {\n        width: 16,\n        style: {\n          minHeight: 300,\n          width: '50%',\n          marginLeft: '25%'\n        }\n      }, React.createElement(Container, {\n        style: {\n          marginTop: '80px',\n          marginLeft: '50px'\n        }\n      }, React.createElement(Card, {\n        style: {\n          width: '80%'\n        }\n      }, React.createElement(Form.Group, {\n        size: \"large\",\n        style: {\n          marginLeft: '15%',\n          marginRight: '15%'\n        }\n      }, React.createElement(Header, {\n        as: \"h2\",\n        color: \"black\",\n        textAlign: \"center\",\n        style: {\n          marginTop: 10\n        }\n      }, \"Add Candidate\"), React.createElement(Form.Input, {\n        fluid: true,\n        label: \"Name:\",\n        placeholder: \"Enter your name.\",\n        textAlign: \"center\"\n      }), React.createElement(\"p\", null, \"Image:\"), React.createElement(\"div\", {\n        class: \"ui fluid\",\n        style: {\n          borderWidth: '0px',\n          marginRight: '20%'\n        }\n      }, React.createElement(\"input\", {\n        type: \"file\",\n        class: \"inputfile\",\n        id: \"embedpollfileinput\",\n        style: {\n          maxWidth: '0.1px',\n          maxHeight: '0.1px',\n          zIndex: '-1',\n          overflow: 'hidden',\n          position: 'absolute'\n        }\n      }), React.createElement(\"label\", {\n        for: \"embedpollfileinput\",\n        class: \"ui huge blue right floated button\",\n        style: {\n          fontSize: '15px',\n          marginRight: '30%'\n        }\n      }, React.createElement(\"i\", {\n        class: \"ui upload icon\"\n      }), \"Upload image\")), React.createElement(\"br\", null), React.createElement(\"br\", null), React.createElement(\"br\", null), React.createElement(\"p\", null, \"Description:\"), React.createElement(Form.Input, {\n        as: \"TextArea\",\n        fluid: true,\n        label: \"Description:\",\n        placeholder: \"Describe here.\",\n        style: {\n          width: '100%'\n        },\n        centered: true\n      }), React.createElement(\"br\", null), React.createElement(\"br\", null), React.createElement(Button, {\n        primary: true,\n        style: {\n          Bottom: '10px',\n          marginBottom: '10px'\n        }\n      }, \"Register\")))))))));\n    }\n  }]);\n\n  return VotingList;\n}(Component);\n\nexport default VotingList;","map":{"version":3,"sources":["D:\\Blockchain\\BlockChainVoting\\pages\\election\\addcand.js"],"names":["React","Component","Grid","Button","Form","Header","Icon","Menu","Sidebar","Container","Card","Layout","web3","Election","ipfs","Cookies","Router","VotingList","buffer","ipfsHash","event","stopPropagation","preventDefault","file","target","files","reader","window","FileReader","readAsArrayBuffer","onloadend","convertToBuffer","Buffer","from","result","setState","console","log","eth","getAccounts","accounts","add","state","err","hash","election","methods","addCandidate","cand_name","cand_desc","send","error","transactionHash","columns","backgroundColor","borderWidth","color","message","alert","pushRoute","SidebarExampleVisible","minHeight","width","marginLeft","marginTop","marginRight","maxWidth","maxHeight","zIndex","overflow","position","fontSize","Bottom","marginBottom"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Grid, Button, Form, Header, Icon, Menu, Sidebar, Container, Card } from 'semantic-ui-react';\r\nimport Layout from '../../components/Layout'; \r\nimport web3 from '../../Ethereum/web3';\r\nimport Election from '../../Ethereum/election';\r\nimport ipfs from '../../ipfs';\r\nimport Cookies from 'js-cookie';\r\nimport {Router} from '../../routes';\r\nclass VotingList extends Component {\r\n\r\n  state = {\r\n     buffer: '',\r\n     ipfsHash: ''\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n\r\n    }catch(err) {\r\n        console.log(err.message);\r\n        alert(\"Redirecting you to login page!\");\r\n        Router.pushRoute()\r\n    }\r\n  }\r\n    \r\n  captureFile = (event) => {\r\n    event.stopPropagation()\r\n    event.preventDefault()\r\n    const file = event.target.files[0]\r\n    let reader = new window.FileReader()\r\n    reader.readAsArrayBuffer(file)\r\n    reader.onloadend = () => this.convertToBuffer(reader)\r\n};\r\n\r\nconvertToBuffer = async(reader) => {\r\n    //file is converted to a buffer for upload to IPFS\r\n    const buffer = await Buffer.from(reader.result);\r\n    //set this buffer -using es6 syntax\r\n    this.setState({buffer});\r\n    console.log(buffer);\r\n};\r\n\r\nonSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    console.log(\"web3 value is \",web3.eth.getAccounts());\r\n    const accounts = await web3.eth.getAccounts();\r\n    console.log('Sending from Metamask account: ' , accounts[0]);\r\n\r\n    await ipfs.add(this.state.buffer, (err, ipfsHash) => {\r\n        console.log(err,ipfsHash);\r\n        this.setState({ ipfsHash: ipfsHash[0].hash });\r\n\r\n        election.methods.addCandidate(cand_name,cand_desc,this.state.ipfsHash).send({\r\n            from: accounts[0]}, (error, transactionHash) => {}\r\n        );\r\n    })\r\n};\r\n\r\n    GridExampleGrid = () => <Grid>{columns}</Grid>\r\n    SidebarExampleVisible = () => (\r\n  \r\n      <Sidebar.Pushable>\r\n        <Sidebar as={Menu} animation='overlay' icon='labeled' inverted vertical visible width='thin' style={{ backgroundColor: 'white', borderWidth: \"10px\" }}>\r\n        <Menu.Item as='a' style={{ color: 'grey' }} >\r\n        <h2>MENU</h2><hr/>\r\n        </Menu.Item>\r\n          <Menu.Item as='a' style={{ color: 'grey' }} >\r\n            <Icon name='dashboard' />\r\n            Dashboard\r\n          </Menu.Item>\r\n          <Menu.Item as='a' style={{ color: 'grey' }}>\r\n            <Icon name='user outline' />\r\n            Candidate List\r\n          </Menu.Item>\r\n          <Menu.Item as='a' style={{ color: 'grey' }}>\r\n            <Icon name='list' />\r\n            Voter List\r\n          </Menu.Item>\r\n          <Menu.Item as='a' style={{ color: 'grey' }}>\r\n            <Icon name='sign out' />\r\n            Sign Out\r\n          </Menu.Item>\r\n \r\n        </Sidebar>\r\n      </Sidebar.Pushable>\r\n    )\r\n  \r\n    render() {\r\n      return (\r\n        <div> \r\n          <Grid>\r\n            <Grid.Row>\r\n              <Grid.Column width={2}>\r\n                {this.SidebarExampleVisible()}\r\n              </Grid.Column>\r\n              <Layout>                                   \r\n                <Grid.Column width={16} style={{ minHeight: 300, width: '50%', marginLeft: '25%'}}>\r\n                    <Container style={{marginTop:'80px',marginLeft:'50px'}}>                      \r\n                       <Card style={{width: '80%'}}>      \r\n                       \r\n                       <Form.Group  size='large'style={{marginLeft: '15%',marginRight: '15%'}} >\r\n                       <Header as='h2' color='black' textAlign='center' style={{marginTop: 10}}>                 \r\n                        Add Candidate\r\n                       </Header>\r\n                       <Form.Input\r\n                        fluid\r\n                        label='Name:'\r\n                        placeholder='Enter your name.'\r\n                        \r\n                        textAlign='center'\r\n                       \r\n                    />        \r\n                        \r\n                        <p>Image:</p>\r\n                       \r\n                        \r\n                        <div class=\"ui fluid\" style={{ borderWidth: '0px', marginRight: '20%' }}>\r\n                          <input type=\"file\" class=\"inputfile\" id=\"embedpollfileinput\" style={{ maxWidth: '0.1px', maxHeight: '0.1px', zIndex: '-1', overflow: 'hidden', position: 'absolute' }} />\r\n                          <label for=\"embedpollfileinput\" class=\"ui huge blue right floated button\" style={{ fontSize: '15px', marginRight: '30%' }}>\r\n                            <i class=\"ui upload icon\"></i>\r\n                            Upload image\r\n                          </label>\r\n                        </div><br /><br /><br />\r\n                        <p>Description:</p>\r\n                        <Form.Input as='TextArea'\r\n                         fluid\r\n                         label='Description:'                         \r\n                         placeholder='Describe here.'\r\n                         style={{width: '100%'}}\r\n                         centered={true}\r\n                          />\r\n                       <br/><br/>\r\n                       <Button primary style={{Bottom: '10px',marginBottom: '10px'}}>Register</Button>\r\n                        </Form.Group>          \r\n                      </Card> \r\n                    </Container>\r\n                  </Grid.Column>                \r\n              </Layout>\r\n            </Grid.Row>\r\n          </Grid>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n\r\nexport default VotingList"]},"metadata":{},"sourceType":"module"}