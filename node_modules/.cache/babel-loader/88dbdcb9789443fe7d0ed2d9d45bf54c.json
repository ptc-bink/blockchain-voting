{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from \"react\";\nimport { Button, Divider, Icon, Image, Transition, Form, Grid, Segment } from \"semantic-ui-react\";\n\nvar DividerExampleVerticalForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DividerExampleVerticalForm, _Component);\n\n  function DividerExampleVerticalForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DividerExampleVerticalForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DividerExampleVerticalForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      visible: true\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleVisibility\", function () {\n      return _this.setState({\n        visible: !_this.state.visible\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"returnBackImage\", function () {\n      return React.createElement(\"div\", {\n        className: \"login-form\"\n      }, React.createElement(\"style\", {\n        JSX: true\n      }, \"\\n        .login-form {\\n            width:100vw;\\n            height:100vh;\\n            position:absolute;\\n            background: url('../static/blockchain.jpg') no-repeat;\\n            z-index: -1;\\n        }\\n      \"));\n    });\n\n    return _this;\n  }\n\n  _createClass(DividerExampleVerticalForm, [{\n    key: \"render\",\n    value: function render() {\n      var visible = this.state.visible;\n      return React.createElement(\"div\", null, React.createElement(\"link\", {\n        rel: \"stylesheet\",\n        href: \"//cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css\"\n      }), React.createElement(\"div\", null, this.returnBackImage(), React.createElement(Button.Group, {\n        style: {\n          marginLeft: '43%'\n        }\n      }, React.createElement(Button, {\n        primary: true,\n        content: \"Signup\",\n        onClick: this.toggleVisibility\n      }), React.createElement(Button.Or, null), React.createElement(Button, {\n        primary: true,\n        content: \"Login\",\n        onClick: this.toggleVisibility\n      })), React.createElement(Divider, {\n        style: {\n          zIndex: '-1'\n        }\n      }), React.createElement(Grid, {\n        className: \"grid1\"\n      }, React.createElement(Grid.Row, null, React.createElement(Grid.Column, {\n        width: 3\n      }), React.createElement(Grid.Column, {\n        width: 5,\n        style: {\n          marginLeft: '15%',\n          marginTop: '15%'\n        },\n        verticalAlign: \"middle\"\n      }, React.createElement(Segment, {\n        placeholder: true,\n        className: \"segment\"\n      }, React.createElement(Transition, {\n        visible: !this.state.visible,\n        animation: \"scale\",\n        duration: 300\n      }, React.createElement(Form, {\n        size: \"large\"\n      }, React.createElement(\"h3\", {\n        style: {\n          textAlign: \"center\"\n        }\n      }, \"Login\"), React.createElement(Form.Input, {\n        fluid: true,\n        icon: \"user\",\n        iconPosition: \"left\",\n        placeholder: \"Email\",\n        style: {\n          padding: 5\n        }\n      }), React.createElement(Form.Input, {\n        style: {\n          padding: 5\n        },\n        fluid: true,\n        icon: \"lock\",\n        iconPosition: \"left\",\n        placeholder: \"Password\",\n        type: \"password\"\n      }), React.createElement(Button, {\n        color: \"blue\",\n        fluid: true,\n        size: \"large\",\n        style: {\n          marginBottom: 15\n        }\n      }, \"Submit\"))), React.createElement(Transition, {\n        visible: this.state.visible,\n        animation: \"scale\",\n        duration: 300\n      }, React.createElement(Form, {\n        size: \"large\"\n      }, React.createElement(\"h3\", {\n        style: {\n          textAlign: \"center\"\n        }\n      }, \"Sign up\"), React.createElement(Form.Input, {\n        fluid: true,\n        icon: \"user\",\n        iconPosition: \"left\",\n        placeholder: \"Email\",\n        style: {\n          padding: 5\n        }\n      }), React.createElement(Form.Input, {\n        style: {\n          padding: 5\n        },\n        fluid: true,\n        icon: \"lock\",\n        iconPosition: \"left\",\n        placeholder: \"Password\",\n        type: \"password\"\n      }), React.createElement(Form.Input, {\n        style: {\n          padding: 5\n        },\n        fluid: true,\n        icon: \"lock\",\n        iconPosition: \"left\",\n        placeholder: \"Repeat Password\",\n        type: \"password\"\n      }), React.createElement(Button, {\n        color: \"blue\",\n        fluid: true,\n        size: \"large\",\n        style: {\n          marginBottom: 15\n        }\n      }, \"Submit\")))))))));\n    }\n  }]);\n\n  return DividerExampleVerticalForm;\n}(Component);\n\nexport default DividerExampleVerticalForm;","map":{"version":3,"sources":["D:\\Blockchain\\ProjectEth\\pages\\vdivider.js"],"names":["React","Component","Button","Divider","Icon","Image","Transition","Form","Grid","Segment","DividerExampleVerticalForm","visible","setState","state","returnBackImage","marginLeft","toggleVisibility","zIndex","marginTop","textAlign","padding","marginBottom"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Divider,\r\n  Icon,\r\n  Image,\r\n  Transition,\r\n  Form,\r\n  Grid,\r\n  Segment\r\n} from \"semantic-ui-react\";\r\n\r\nclass DividerExampleVerticalForm extends Component {\r\n  state = { visible: true };\r\n  toggleVisibility = () => this.setState({ visible: !this.state.visible });  \r\n  returnBackImage = () => (\r\n    <div className='login-form'>\r\n    <style JSX>{`\r\n        .login-form {\r\n            width:100vw;\r\n            height:100vh;\r\n            position:absolute;\r\n            background: url('../static/blockchain.jpg') no-repeat;\r\n            z-index: -1;\r\n        }\r\n      `}</style>\r\n  </div>\r\n  )\r\n  render() {\r\n    const { visible } = this.state;\r\n    return (\r\n        <div>\r\n            <link\r\n          rel=\"stylesheet\"\r\n          href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css\"\r\n        />\r\n      <div>\r\n        {this.returnBackImage()}          \r\n               \r\n        <Button.Group style={{marginLeft: '43%'}}>\r\n          <Button primary content={\"Signup\"} onClick={this.toggleVisibility} />\r\n          <Button.Or />\r\n          <Button primary content={\"Login\"} onClick={this.toggleVisibility} />\r\n        </Button.Group>\r\n        <Divider style={{zIndex: '-1'}}/>\r\n        <Grid className=\"grid1\">\r\n          <Grid.Row>\r\n            <Grid.Column width={3} />\r\n            <Grid.Column width={5} style={{marginLeft: '15%', marginTop: '15%'}} verticalAlign=\"middle\">\r\n              <Segment placeholder className=\"segment\">\r\n                <Transition\r\n                  visible={!this.state.visible}\r\n                  animation=\"scale\"\r\n                  duration={300}\r\n                >\r\n                  <Form size=\"large\">\r\n                    <h3 style={{ textAlign: \"center\" }}>Login</h3>\r\n                    <Form.Input\r\n                      fluid\r\n                      icon=\"user\"\r\n                      iconPosition=\"left\"\r\n                      placeholder=\"Email\"\r\n                      style={{ padding: 5 }}\r\n                    />\r\n                    <Form.Input\r\n                      style={{ padding: 5 }}\r\n                      fluid\r\n                      icon=\"lock\"\r\n                      iconPosition=\"left\"\r\n                      placeholder=\"Password\"\r\n                      type=\"password\"\r\n                    />\r\n\r\n                    <Button\r\n                      color=\"blue\"\r\n                      fluid\r\n                      size=\"large\"\r\n                      style={{ marginBottom: 15 }}\r\n                    >\r\n                      Submit\r\n                    </Button>\r\n                    {/* {this.DividerExampleVerticalForm()} */}\r\n                  </Form>\r\n                </Transition>\r\n\r\n                <Transition\r\n                  visible={this.state.visible}\r\n                  animation=\"scale\"\r\n                  duration={300}\r\n                >\r\n                  <Form size=\"large\">\r\n                    <h3 style={{ textAlign: \"center\" }}>Sign up</h3>\r\n                    <Form.Input\r\n                      fluid\r\n                      icon=\"user\"\r\n                      iconPosition=\"left\"\r\n                      placeholder=\"Email\"\r\n                      style={{ padding: 5 }}\r\n                    />\r\n                    <Form.Input\r\n                      style={{ padding: 5 }}\r\n                      fluid\r\n                      icon=\"lock\"\r\n                      iconPosition=\"left\"\r\n                      placeholder=\"Password\"\r\n                      type=\"password\"\r\n                    />\r\n                    <Form.Input\r\n                      style={{ padding: 5 }}\r\n                      fluid\r\n                      icon=\"lock\"\r\n                      iconPosition=\"left\"\r\n                      placeholder=\"Repeat Password\"\r\n                      type=\"password\"\r\n                    />\r\n                    <Button\r\n                      color=\"blue\"\r\n                      fluid\r\n                      size=\"large\"\r\n                      style={{ marginBottom: 15 }}\r\n                    >\r\n                      Submit\r\n                    </Button>\r\n                  </Form>\r\n                </Transition>\r\n              </Segment>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>        \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default DividerExampleVerticalForm;\r\n"]},"metadata":{},"sourceType":"module"}