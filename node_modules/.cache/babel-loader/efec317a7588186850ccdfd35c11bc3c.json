{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport { Button, Form, Grid, Header, Image, Message, Segment } from 'semantic-ui-react';\nimport Cookies from 'js-cookie';\nimport { Router } from '../routes';\n\nvar LoginForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LoginForm, _Component);\n\n  function LoginForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LoginForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LoginForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      election_address: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"LoginForm\", function () {\n      return React.createElement(\"div\", {\n        className: \"login-form\"\n      }, React.createElement(\"style\", {\n        JSX: true\n      }, \"\\n                .login-form {\\n                    width:100%;\\n                    height:100%;\\n                    position:absolute;\\n                    background: url('/static/blockchain.jpg') no-repeat;\\n                } \\n              \"), React.createElement(Grid, {\n        textAlign: \"center\",\n        style: {\n          height: '100%'\n        },\n        verticalAlign: \"middle\"\n      }, React.createElement(Grid.Column, {\n        style: {\n          maxWidth: 380\n        }\n      }, React.createElement(Form, {\n        size: \"large\"\n      }, React.createElement(Segment, null, React.createElement(Header, {\n        as: \"h2\",\n        color: \"black\",\n        textAlign: \"center\",\n        style: {\n          marginTop: 10\n        }\n      }, \"Login\"), React.createElement(Form.Input, {\n        fluid: true,\n        icon: \"user\",\n        iconPosition: \"left\",\n        placeholder: \"Email\",\n        style: {\n          padding: 5\n        },\n        id: \"signin_email\"\n      }), React.createElement(Form.Input, {\n        style: {\n          padding: 5\n        },\n        fluid: true,\n        id: \"signin_password\",\n        icon: \"lock\",\n        iconPosition: \"left\",\n        placeholder: \"Password\",\n        type: \"password\"\n      }), React.createElement(Button, {\n        color: \"blue\",\n        fluid: true,\n        size: \"large\",\n        style: {\n          marginBottom: 15\n        },\n        onClick: _this.signin\n      }, \"Submit\"))))));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"signin\", function (event) {\n      var email = document.getElementById('signin_email').value;\n      var password = document.getElementById('signin_password').value;\n      var http = new XMLHttpRequest();\n      var url = \"voter/authenticate\";\n      var params = \"email=\" + email + \"&password=\" + password;\n      http.open(\"POST\", url, true); //Send the proper header information along with the request\n\n      http.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n\n      http.onreadystatechange = function () {\n        //Call a function when the state changes.\n        if (http.readyState == 4 && http.status == 200) {\n          var responseObj = JSON.parse(http.responseText);\n\n          if (responseObj.status == \"success\") {\n            Cookies.set(\"voter_email\", encodeURI(responseObj.data.email));\n            Cookies.set(\"address\", encodeURI(responseObj.data.election_address));\n            Router.pushRoute(\"/election/\".concat(responseObj.data.election_address, \"/vote\"));\n          } else {\n            alert(responseObj.message);\n          }\n        }\n      };\n\n      http.send(params);\n    });\n\n    return _this;\n  }\n\n  _createClass(LoginForm, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", null, React.createElement(\"link\", {\n        rel: \"stylesheet\",\n        href: \"//cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css\"\n      }), this.LoginForm());\n    }\n  }]);\n\n  return LoginForm;\n}(Component);\n\nexport default LoginForm;","map":{"version":3,"sources":["D:\\Blockchain\\BlockChainVoting\\pages\\voter_login.js"],"names":["React","Component","Button","Form","Grid","Header","Image","Message","Segment","Cookies","Router","LoginForm","election_address","height","maxWidth","marginTop","padding","marginBottom","signin","event","email","document","getElementById","value","password","http","XMLHttpRequest","url","params","open","setRequestHeader","onreadystatechange","readyState","status","responseObj","JSON","parse","responseText","set","encodeURI","data","pushRoute","alert","message","send"],"mappings":"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","sourcesContent":["import React,{Component} from 'react'\r\nimport { Button, Form, Grid, Header, Image, Message, Segment } from 'semantic-ui-react'\r\nimport Cookies from 'js-cookie';\r\nimport {Router} from '../routes';\r\nclass LoginForm extends Component {\r\n \r\n  state = {\r\n    election_address: ''\r\n  }\r\n\r\n    LoginForm = () => (         \r\n        <div className='login-form'>          \r\n          <style JSX>{`\r\n                .login-form {\r\n                    width:100%;\r\n                    height:100%;\r\n                    position:absolute;\r\n                    background: url('/static/blockchain.jpg') no-repeat;\r\n                } \r\n              `}</style>\r\n          \r\n          <Grid textAlign='center' style={{ height: '100%'}} verticalAlign='middle'>\r\n            <Grid.Column style={{ maxWidth: 380 }}>              \r\n              <Form size='large'>        \r\n                <Segment>\r\n                <Header as='h2' color='black' textAlign='center' style={{marginTop: 10}}>                 \r\n                Login\r\n              </Header>\r\n                  <Form.Input fluid icon='user' iconPosition='left' placeholder='Email' style={{padding: 5}} id='signin_email' />\r\n                  <Form.Input\r\n                    style={{padding: 5}}\r\n                    fluid\r\n                    id='signin_password'\r\n                    icon='lock'\r\n                    iconPosition='left'\r\n                    placeholder='Password'\r\n                    type='password'\r\n                  />\r\n      \r\n                  <Button color='blue' fluid size='large' style={{marginBottom: 15}} onClick={this.signin}>\r\n                    \r\n                    Submit\r\n                  </Button>\r\n                </Segment>\r\n              </Form>              \r\n            </Grid.Column>\r\n          </Grid>          \r\n        </div>\r\n      )\r\n    signin = event => {\r\n        const email = document.getElementById('signin_email').value;\r\n        const password = document.getElementById('signin_password').value;\r\n        var http = new XMLHttpRequest();\r\n        var url = \"voter/authenticate\";\r\n        var params = \"email=\" + email + \"&password=\" + password;\r\n        http.open(\"POST\", url, true);\r\n        //Send the proper header information along with the request\r\n        http.setRequestHeader(\r\n            \"Content-type\",\r\n            \"application/x-www-form-urlencoded\"\r\n        );\r\n        http.onreadystatechange = function() {\r\n            //Call a function when the state changes.\r\n            if (http.readyState == 4 && http.status == 200) {\r\n                var responseObj = JSON.parse(http.responseText);\r\n                if(responseObj.status==\"success\") {\r\n                  Cookies.set(\"voter_email\",encodeURI(responseObj.data.email));\r\n                  Cookies.set(\"address\",encodeURI(responseObj.data.election_address));\r\n                  Router.pushRoute(`/election/${responseObj.data.election_address}/vote`)\r\n                }\r\n                else {\r\n                  alert(responseObj.message);\r\n                }\r\n            }\r\n        };\r\n    http.send(params);\r\n    }\r\n\r\nrender() {\r\n   \r\n    return (\r\n      <div>\r\n    <link\r\n           rel=\"stylesheet\"\r\n           href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css\"\r\n        />\r\n      {this.LoginForm()}\r\n      \r\n      </div>\r\n  );\r\n  }\r\n}\r\n\r\n    export default LoginForm"]},"metadata":{},"sourceType":"module"}