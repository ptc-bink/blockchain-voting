{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from \"react\";\nimport { Button, Divider, Icon, Image, Transition, Form, Grid, Segment } from \"semantic-ui-react\";\nimport { Router } from '../routes';\nimport web3 from \"../Ethereum/web3\";\nimport Election_Factory from \"../Ethereum/election_factory\";\n\nvar DividerExampleVerticalForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DividerExampleVerticalForm, _Component);\n\n  function DividerExampleVerticalForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DividerExampleVerticalForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DividerExampleVerticalForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      visible: true,\n      email: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleVisibility\", function () {\n      return _this.setState({\n        visible: !_this.state.visible\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"returnBackImage\", function () {\n      return React.createElement(\"div\", {\n        className: \"login-form\"\n      }, React.createElement(\"style\", {\n        JSX: true\n      }, \"\\n        .login-form {\\n            width:100vw;\\n            height:100vh;\\n            position:absolute; \\n            background: url('../../static/blockchain.jpg') no-repeat;\\n            z-index: -1;\\n        }\\n      \"));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"signup\", function (event) {\n      var email = document.getElementById('signup_email').value;\n      var password = document.getElementById('signup_password').value;\n      var repeat_password = document.getElementById('signup_repeat_password').value;\n\n      if (password != repeat_password) {\n        alert(\"Passwords do not match\");\n      } else {\n        var http = new XMLHttpRequest();\n        var url = 'company/register';\n        var params = 'email=' + email + '&password=' + password;\n        http.open('POST', url, true); //Send the proper header information along with the request\n\n        http.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n\n        http.onreadystatechange = function () {\n          //Call a function when the state changes.\n          if (http.readyState == 4 && http.status == 200) {\n            var responseObj = JSON.parse(http.responseText);\n\n            if (responseObj.status == \"success\") {\n              document.cookie = \"company_id\" + \"=\" + encodeURI(responseObj.data.id); //Router.pushRoute(`/elections/${this.props.address}`);\n\n              alert(\"Added!\");\n              Router.pushRoute(\"/company_login\");\n            } else {\n              alert(responseObj.message);\n            }\n          }\n        };\n\n        http.send(params);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"signin\",\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        var email, password, http, url, params, accounts, summary;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                email = document.getElementById('signin_email').value;\n\n                _this.setState({\n                  email: document.getElementById('signin_email').value\n                });\n\n                console.log(_this.state.email);\n                password = document.getElementById(\"signin_password\").value;\n                http = new XMLHttpRequest();\n                url = \"company/authenticate\";\n                params = \"email=\" + email + \"&password=\" + password;\n                http.open(\"POST\", url, true); //Send the proper header information along with the request\n\n                http.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n\n                http.onreadystatechange = function () {\n                  //Call a function when the state changes.\n                  if (http.readyState == 4 && http.status == 200) {\n                    var responseObj = JSON.parse(http.responseText);\n\n                    if (responseObj.status == \"success\") {\n                      document.cookie = \"company_id\" + \"=\" + encodeURI(responseObj.data.id);\n                    } else {\n                      alert(responseObj.message);\n                    }\n                  }\n                };\n\n                _context.prev = 10;\n                _context.next = 13;\n                return web3.eth.getAccounts();\n\n              case 13:\n                accounts = _context.sent;\n                console.log(_this.state.email);\n                _context.next = 17;\n                return Election_Factory.methods.getDeployedElection(_this.state.email).call({\n                  from: accounts[0]\n                });\n\n              case 17:\n                summary = _context.sent;\n                console.log(accounts[0]);\n\n                if (summary[2] == \"Create an election.\") {\n                  Router.pushRoute(\"/election/create_election\");\n                } else {\n                  window.location(\"/election/\".concat(summary[0], \"/company_dashboard\"));\n                }\n\n                _context.next = 25;\n                break;\n\n              case 22:\n                _context.prev = 22;\n                _context.t0 = _context[\"catch\"](10);\n                console.log(_context.t0.Message);\n\n              case 25:\n                http.send(params);\n\n              case 26:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[10, 22]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    return _this;\n  }\n\n  _createClass(DividerExampleVerticalForm, [{\n    key: \"render\",\n    value: function render() {\n      var visible = this.state.visible;\n      return React.createElement(\"div\", null, React.createElement(\"link\", {\n        rel: \"stylesheet\",\n        href: \"//cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css\"\n      }), React.createElement(\"div\", null, this.returnBackImage(), React.createElement(Button.Group, {\n        style: {\n          marginLeft: '43%'\n        }\n      }, React.createElement(Button, {\n        primary: true,\n        content: visible ? \"Sign in\" : \"Sign Up\",\n        onClick: this.toggleVisibility\n      })), React.createElement(Divider, {\n        style: {\n          zIndex: '-10'\n        }\n      }), React.createElement(Grid, {\n        className: \"grid1\"\n      }, React.createElement(Grid.Row, null, React.createElement(Grid.Column, {\n        width: 5,\n        style: {\n          marginLeft: '33%',\n          marginTop: '10%'\n        },\n        verticalAlign: \"middle\"\n      }, React.createElement(Segment, {\n        placeholder: true,\n        className: \"segment\"\n      }, React.createElement(Transition, {\n        visible: !this.state.visible,\n        animation: \"scale\",\n        duration: 300\n      }, React.createElement(Form, {\n        size: \"large\"\n      }, React.createElement(\"h3\", {\n        style: {\n          textAlign: \"center\"\n        }\n      }, \"Sign in\"), React.createElement(Form.Input, {\n        fluid: true,\n        id: \"signin_email\",\n        icon: \"user\",\n        iconPosition: \"left\",\n        placeholder: \"Email\",\n        style: {\n          padding: 5\n        }\n      }), React.createElement(Form.Input, {\n        style: {\n          padding: 5\n        },\n        fluid: true,\n        id: \"signin_password\",\n        icon: \"lock\",\n        iconPosition: \"left\",\n        placeholder: \"Password\",\n        type: \"password\"\n      }), React.createElement(Button, {\n        onClick: this.signin,\n        color: \"blue\",\n        fluid: true,\n        size: \"large\",\n        style: {\n          marginBottom: 15\n        }\n      }, \"Submit\"))), React.createElement(Transition, {\n        visible: this.state.visible,\n        animation: \"scale\",\n        duration: 300\n      }, React.createElement(Form, {\n        size: \"large\"\n      }, React.createElement(\"h3\", {\n        style: {\n          textAlign: \"center\"\n        }\n      }, \"Sign up\"), React.createElement(Form.Input, {\n        fluid: true,\n        id: \"signup_email\",\n        icon: \"user\",\n        iconPosition: \"left\",\n        placeholder: \"Email\",\n        style: {\n          padding: 5\n        }\n      }), React.createElement(Form.Input, {\n        style: {\n          padding: 5\n        },\n        fluid: true,\n        id: \"signup_password\",\n        icon: \"lock\",\n        iconPosition: \"left\",\n        placeholder: \"Password\",\n        type: \"password\"\n      }), React.createElement(Form.Input, {\n        style: {\n          padding: 5\n        },\n        fluid: true,\n        id: \"signup_repeat_password\",\n        icon: \"lock\",\n        iconPosition: \"left\",\n        placeholder: \"Repeat Password\",\n        type: \"password\"\n      }), React.createElement(Button, {\n        onClick: this.signup,\n        color: \"blue\",\n        fluid: true,\n        size: \"large\",\n        style: {\n          marginBottom: 15\n        }\n      }, \"Submit\"), React.createElement(\"h1\", null, this.state.tp)))))))));\n    }\n  }]);\n\n  return DividerExampleVerticalForm;\n}(Component);\n\nexport default DividerExampleVerticalForm;","map":{"version":3,"sources":["D:\\Blockchain\\BlockChainVoting\\pages\\company_login.js"],"names":["React","Component","Button","Divider","Icon","Image","Transition","Form","Grid","Segment","Router","web3","Election_Factory","DividerExampleVerticalForm","visible","email","setState","state","event","document","getElementById","value","password","repeat_password","alert","http","XMLHttpRequest","url","params","open","setRequestHeader","onreadystatechange","readyState","status","responseObj","JSON","parse","responseText","cookie","encodeURI","data","id","pushRoute","message","send","console","log","eth","getAccounts","accounts","methods","getDeployedElection","call","from","summary","window","location","Message","returnBackImage","marginLeft","toggleVisibility","zIndex","marginTop","textAlign","padding","signin","marginBottom","signup","tp"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Divider,\r\n  Icon,\r\n  Image,\r\n  Transition,\r\n  Form,\r\n  Grid,\r\n  Segment\r\n} from \"semantic-ui-react\";\r\nimport {Router} from '../routes'\r\nimport web3 from \"../Ethereum/web3\";\r\nimport Election_Factory from \"../Ethereum/election_factory\";\r\n\r\nclass DividerExampleVerticalForm extends Component {\r\n  state = { visible: true, email: ''};\r\n  toggleVisibility = () => this.setState({ visible: !this.state.visible });  \r\n  returnBackImage = () => (\r\n    <div className='login-form'>\r\n    <style JSX>{`\r\n        .login-form {\r\n            width:100vw;\r\n            height:100vh;\r\n            position:absolute; \r\n            background: url('../../static/blockchain.jpg') no-repeat;\r\n            z-index: -1;\r\n        }\r\n      `}</style>\r\n  </div>\r\n  )\r\n  \r\n  signup = event => {\r\n    const email = document.getElementById('signup_email').value;\r\n    const password = document.getElementById('signup_password').value;\r\n    const repeat_password = document.getElementById('signup_repeat_password').value;\r\n    if(password!=repeat_password){\r\n\t\talert(\"Passwords do not match\");\t\t\r\n\t}\r\n\telse {\r\n    var http = new XMLHttpRequest();\r\n    var url = 'company/register';\r\n    var params = 'email='+email+'&password='+password;\r\n    http.open('POST', url, true);\r\n    //Send the proper header information along with the request\r\n    http.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\r\n    http.onreadystatechange = function() {//Call a function when the state changes.\r\n        if(http.readyState == 4 && http.status == 200) {\r\n            var responseObj = JSON.parse(http.responseText)\r\n            if(responseObj.status==\"success\") {\t\t\t\t\t\r\n                    document.cookie = \"company_id\" + \"=\" + encodeURI(responseObj.data.id);\t\t\t\t\t\r\n                    //Router.pushRoute(`/elections/${this.props.address}`);\r\n                    alert(\"Added!\");\r\n                    Router.pushRoute(`/company_login`);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\talert(responseObj.message);\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n    }\r\n\thttp.send(params); \r\n\t}\r\n  }\r\n  signin =  async event => {\r\n      const email = document.getElementById('signin_email').value;\r\n      this.setState({email: document.getElementById('signin_email').value});\r\n      console.log(this.state.email);\r\n      const password = document.getElementById(\"signin_password\").value;\r\n      var http = new XMLHttpRequest();\r\n      var url = \"company/authenticate\";\r\n      var params = \"email=\" + email + \"&password=\" + password;\r\n      http.open(\"POST\", url, true);\r\n      //Send the proper header information along with the request\r\n      http.setRequestHeader(\r\n        \"Content-type\",\r\n        \"application/x-www-form-urlencoded\"\r\n      );\r\n      http.onreadystatechange = function() {\r\n        //Call a function when the state changes.\r\n        if (http.readyState == 4 && http.status == 200) {\r\n\t\t  var responseObj = JSON.parse(http.responseText);\r\n\t\t  if(responseObj.status==\"success\") {\r\n\t\t\tdocument.cookie = \"company_id\" + \"=\" + encodeURI(responseObj.data.id);\t\t\t\r\n\t\t  }\r\n\t\t  else {\r\n\t\t\talert(responseObj.message);\r\n\t\t  }\r\n          \r\n        }\r\n      };\r\n      try {\r\n        const accounts = await web3.eth.getAccounts();\r\n        console.log(this.state.email);\r\n        const summary = await Election_Factory.methods.getDeployedElection(this.state.email).call({from: accounts[0]});\r\n        console.log(accounts[0]);\r\n        if(summary[2] == \"Create an election.\") {\r\n            Router.pushRoute(`/election/create_election`);\r\n        }\r\n        else {\r\n            window.location(`/election/${summary[0]}/company_dashboard`);\r\n        }\r\n    }\r\n    catch (err) {\r\n        console.log(err.Message);\r\n    }\r\n      http.send(params); \r\n  }\r\n\r\n  render() {\r\n    const { visible } = this.state;\r\n    return (\r\n        <div>\r\n            <link\r\n          rel=\"stylesheet\"\r\n          href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css\"\r\n        />\r\n      <div>\r\n        {this.returnBackImage()}          \r\n               \r\n        <Button.Group style={{marginLeft: '43%'}}>\r\n          <Button primary content={visible?\"Sign in\":\"Sign Up\"} onClick={this.toggleVisibility} />\r\n        </Button.Group>\r\n        <Divider style={{zIndex: '-10'}}/>\r\n        <Grid className=\"grid1\">\r\n          <Grid.Row>            \r\n            <Grid.Column width={5} style={{marginLeft: '33%', marginTop: '10%'}} verticalAlign=\"middle\">\r\n              <Segment placeholder className=\"segment\">\r\n                <Transition\r\n                  visible={!this.state.visible}\r\n                  animation=\"scale\"  \r\n                  duration={300}\r\n                >\r\n                  <Form size=\"large\">\r\n                    <h3 style={{ textAlign: \"center\" }}>Sign in</h3>\r\n\t\t\t\t\t<Form.Input      \r\n\t\t\t\t\t                 \r\n                      fluid\r\n                      id=\"signin_email\"\r\n                      icon=\"user\"\r\n                      iconPosition=\"left\"\r\n                      placeholder=\"Email\"\r\n                      style={{ padding: 5 }}\r\n                    />\r\n                    <Form.Input\r\n                      style={{ padding: 5 }}\r\n                      fluid\r\n                      id=\"signin_password\"\r\n                      icon=\"lock\"\r\n                      iconPosition=\"left\"\r\n                      placeholder=\"Password\"\r\n                      type=\"password\"\r\n                    />\r\n                    \r\n                    <Button          \r\n                      onClick={this.signin}                  \r\n                      color=\"blue\"\r\n                      fluid\r\n                      size=\"large\"\r\n                      style={{ marginBottom: 15 }}\r\n                    >\r\n                      Submit\r\n                    </Button>                    \r\n                  \r\n                  </Form>\r\n                </Transition>\r\n\r\n                <Transition\r\n                  visible={this.state.visible}\r\n                  animation=\"scale\"\r\n                  duration={300}\r\n                >\r\n                  <Form size=\"large\">\r\n                    <h3 style={{ textAlign: \"center\" }}>Sign up</h3>\r\n                    <Form.Input                    \r\n                      fluid\r\n                      id=\"signup_email\"\r\n                      icon=\"user\"\r\n                      iconPosition=\"left\"\r\n                      placeholder=\"Email\"\r\n                      style={{ padding: 5 }}\r\n                    />\r\n                    <Form.Input\r\n                      style={{ padding: 5 }}\r\n                      fluid\r\n                      id=\"signup_password\"\r\n                      icon=\"lock\"\r\n                      iconPosition=\"left\"\r\n                      placeholder=\"Password\"\r\n                      type=\"password\"\r\n                    />\r\n                    <Form.Input\r\n                      style={{ padding: 5 }}\r\n                      fluid\r\n                      id=\"signup_repeat_password\"\r\n                      icon=\"lock\"\r\n                      iconPosition=\"left\"\r\n                      placeholder=\"Repeat Password\"\r\n                      type=\"password\"\r\n                    />\r\n                    <Button\r\n                      onClick={this.signup}\r\n                      color=\"blue\"\r\n                      fluid\r\n                      size=\"large\"\r\n                      style={{ marginBottom: 15 }}\r\n                    >\r\n                      Submit\r\n                    </Button>\r\n                    <h1>{this.state.tp}</h1>\r\n                  </Form>\r\n                </Transition>\r\n              </Segment>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>        \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default DividerExampleVerticalForm;\r\n"]},"metadata":{},"sourceType":"module"}