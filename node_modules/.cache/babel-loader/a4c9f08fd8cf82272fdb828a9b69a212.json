{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport { Button, Form, Grid, Header, Segment, Icon } from 'semantic-ui-react';\nimport web3 from '../../Ethereum/web3';\nimport Election_Factory from '../../Ethereum/election_factory';\nimport { Router } from '../../routes';\n\nvar LoginForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LoginForm, _Component);\n\n  function LoginForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LoginForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LoginForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      election_name: '',\n      election_description: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"signin\",\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        var accounts, address;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log(_this.state.election_name);\n                console.log(_this.state.election_description);\n                _context.next = 4;\n                return web3.eth.getAccounts();\n\n              case 4:\n                accounts = _context.sent;\n                console.log(accounts[0]);\n                _context.next = 8;\n                return Election_Factory.methods.createElection(\"abc@bcd.cde\", _this.state.election_name, _this.state.election_description).call();\n\n              case 8:\n                address = _context.sent;\n                alert(\"Election created successfully!\");\n                console.log(address);\n                Router.pushRoute(\"/election/\".concat(address, \"/company_dashboard\"));\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"LoginForm\", function () {\n      return React.createElement(\"div\", {\n        className: \"login-form\"\n      }, React.createElement(\"style\", {\n        JSX: true\n      }, \"\\n                .login-form {\\n                    width:100%;\\n                    height:100%;\\n                    position:absolute;\\n                    background: url('../../static/blockchain.jpg') no-repeat;\\n                } \\n              \"), React.createElement(Grid, {\n        textAlign: \"center\",\n        style: {\n          height: '100%'\n        },\n        verticalAlign: \"middle\"\n      }, React.createElement(Grid.Column, {\n        style: {\n          maxWidth: 380\n        }\n      }, React.createElement(Form, {\n        size: \"large\"\n      }, React.createElement(Segment, null, React.createElement(Header, {\n        as: \"h2\",\n        color: \"black\",\n        textAlign: \"center\",\n        style: {\n          marginTop: 10\n        }\n      }, \"Create an election!\"), React.createElement(Form.Input, {\n        fluid: true,\n        iconPosition: \"left\",\n        icon: \"address card outline\",\n        placeholder: \"Election Name\",\n        style: {\n          padding: 5\n        },\n        value: _this.state.election_name,\n        onChange: function onChange(event) {\n          return _this.setState({\n            election_name: event.target.value\n          });\n        },\n        required: true\n      }), React.createElement(Form.Input, {\n        as: \"TextArea\",\n        required: true,\n        style: {\n          maxHeight: '30px',\n          maxWidth: '96%',\n          marginBottom: '10px'\n        },\n        fluid: true,\n        placeholder: \"Election Description\",\n        value: _this.state.election_description,\n        onChange: function onChange(event) {\n          return _this.setState({\n            election_description: event.target.value\n          });\n        }\n      }), React.createElement(Button, {\n        color: \"blue\",\n        fluid: true,\n        size: \"large\",\n        style: {\n          marginBottom: 15\n        },\n        onClick: _this.signin\n      }, \"Submit\"))))));\n    });\n\n    return _this;\n  }\n\n  _createClass(LoginForm, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", null, React.createElement(\"link\", {\n        rel: \"stylesheet\",\n        href: \"//cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css\"\n      }), this.LoginForm());\n    }\n  }]);\n\n  return LoginForm;\n}(Component);\n\nexport default LoginForm;","map":{"version":3,"sources":["D:\\Blockchain\\BlockChainVoting\\pages\\election\\create_election.js"],"names":["React","Component","Button","Form","Grid","Header","Segment","Icon","web3","Election_Factory","Router","LoginForm","election_name","election_description","event","console","log","state","eth","getAccounts","accounts","methods","createElection","call","address","alert","pushRoute","height","maxWidth","marginTop","padding","setState","target","value","maxHeight","marginBottom","signin"],"mappings":"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","sourcesContent":["import React,{Component} from 'react'\r\nimport { Button, Form, Grid, Header, Segment, Icon} from 'semantic-ui-react'\r\nimport web3 from '../../Ethereum/web3';\r\nimport Election_Factory from '../../Ethereum/election_factory'\r\nimport {Router} from '../../routes';\r\nclass LoginForm extends Component {\r\n \r\n    state = {\r\n        election_name: '',\r\n        election_description: ''\r\n    }\r\n\r\n    signin = async event => {\r\n        console.log(this.state.election_name);\r\n        console.log(this.state.election_description);\r\n        const accounts = await web3.eth.getAccounts();\r\n        console.log(accounts[0]);\r\n        const address = await Election_Factory.methods\r\n            .createElection(\"abc@bcd.cde\",this.state.election_name,this.state.election_description)\r\n            .call();\r\n        alert(\"Election created successfully!\");\r\n        console.log(address);\r\n        Router.pushRoute(`/election/${address}/company_dashboard`);\r\n    }\r\n\r\n    LoginForm = () => (         \r\n        <div className='login-form'>          \r\n          <style JSX>{`\r\n                .login-form {\r\n                    width:100%;\r\n                    height:100%;\r\n                    position:absolute;\r\n                    background: url('../../static/blockchain.jpg') no-repeat;\r\n                } \r\n              `}</style>\r\n          \r\n          <Grid textAlign='center' style={{ height: '100%'}} verticalAlign='middle'>\r\n            <Grid.Column style={{ maxWidth: 380 }}>              \r\n              <Form size='large'>        \r\n                <Segment>\r\n                <Header as='h2' color='black' textAlign='center' style={{marginTop: 10}}>                 \r\n                Create an election!\r\n              </Header>\r\n                  <Form.Input fluid iconPosition='left' icon=\"address card outline\" placeholder='Election Name' \r\n                  style={{padding: 5}}\r\n                  value={this.state.election_name}\r\n                  onChange={event => this.setState({election_name: event.target.value })}\r\n                  required={true}\r\n                  />\r\n                  <Form.Input\r\n                    as='TextArea'\r\n                    required={true}\r\n                    style={{maxHeight: '30px', maxWidth:'96%', marginBottom: '10px'}}\r\n                    fluid            \r\n                    placeholder= 'Election Description'                      \r\n                    value={this.state.election_description}\r\n                    onChange={event => this.setState({election_description: event.target.value })}\r\n                  />\r\n      \r\n                  <Button color='blue' fluid size='large' style={{marginBottom: 15}} onClick={this.signin}>\r\n                    Submit\r\n                  </Button>\r\n                </Segment>\r\n              </Form>              \r\n            </Grid.Column>\r\n          </Grid>          \r\n        </div>\r\n      )\r\n\r\nrender() {\r\n   \r\n    return (\r\n      <div>\r\n    <link\r\n           rel=\"stylesheet\"\r\n           href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css\"\r\n        />\r\n      {/* <link href=\"../css/paper-dashboard.css?v=2.0.0\" rel=\"stylesheet\" /> */}\r\n      {this.LoginForm()}\r\n      \r\n      </div>\r\n  );\r\n  }\r\n}\r\n\r\n    export default LoginForm"]},"metadata":{},"sourceType":"module"}